<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Rocky Jaiswal</title>
  <subtitle>Musings of an agile developer</subtitle>
  <id>http://rockyj.in/</id>
  <link href="http://rockyj.in/"/>
  <link href="http://rockyj.in/feed.xml" rel="self"/>
  <updated>2012-06-08T00:00:00+05:30</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>The non-tangibles of Agile</title>
    <link rel="http://rockyj.in" href="/2012/06/08/non_tangibles_of_agile.html"/>
    <id>http://rockyj.in/2012/06/08/non_tangibles_of_agile.html</id>
    <published>2012-06-08T00:00:00+05:30</published>
    <updated>2012-06-08T00:00:00+05:30</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;p&gt;A lot of times I have been told that being Agile is all about attitude, a statement which I could not understand until a while back. I thought like in every process if you do X, Y, Z you become Agile. However lately I have realized that Agility is not just about burndown charts, having planning &amp;amp; retrospective meetings or doing you daily stand-ups.&lt;/p&gt;

&lt;p&gt;Being Agile is an actually an attitude, which may sound gibberish but in this post I will try and make some sense of the this &amp;#8220;attitude&amp;#8221; and try to make it more tangible. So if you are doing planning poker, burndown charts and all that jazz that is great but you should still item about these not so obvious things -&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;A lot of times I have been told that being Agile is all about attitude, a statement which I could not understand until a while back. I thought like in every process if you do X, Y, Z you become Agile. However lately I have realized that Agility is not just about burndown charts, having planning &amp;amp; retrospective meetings or doing you daily stand-ups.&lt;/p&gt;

&lt;p&gt;Being Agile is an actually an attitude, which may sound gibberish but in this post I will try and make some sense of the this &amp;#8220;attitude&amp;#8221; and try to make it more tangible. So if you are doing planning poker, burndown charts and all that jazz that is great but you should still item about these not so obvious things -&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Trust&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I talk a lot about trust in my blogs, but what is trust in professional life? In a Scrum project, you can ask yourselves the following questions -&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Do you trust your developers to do the right thing every single time?&lt;/li&gt;

&lt;li&gt;Do you trust the estimates your developers are giving you?&lt;/li&gt;

&lt;li&gt;Do you trust the estimate of the developer even when you see him doing something not related to project?&lt;/li&gt;

&lt;li&gt;Do the developers trust the product owner that the backlog is sufficiently refined and prioritized?&lt;/li&gt;

&lt;li&gt;Do the developers trust that the Scrum Master is helping them?&lt;/li&gt;

&lt;li&gt;Do you trust the Product Owner that he has the larger plan and release date in his/her mind and every action takes you towards that release date?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Trust takes a long time to build and breaks with one small action. The Scrum master, product owner and the developers need to really trust each other if Scrum has to succeed. For example the PO who doesn&amp;#8217;t trust the team&amp;#8217;s estimates will always think that the developers are slacking and keep pushing them to do more which will ultimately destroy the team morale and the project.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Courage&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Agile or Scrum does not fix a single problem. Yes, that is true! I will only highlight and identify some problems as quickly as you allow it to. One can do all the retros in the world but not have the courage to break the bad news or become the bad guy who bring the bad news. For example, the release backlog is no where near the state it should be or the developers don&amp;#8217;t have the tools they need, this will be easily identified in the sprint demo or retro but a lot of times people choose to postpone it or ignore talking about it let alone taking tough decisions like backlog pruning or reducing features. Courage can be in simple things like cancelling a phone call if the phone line is not clear, even do it multiple times forcing change to a better communication solution rather than sleep talking on calls.&lt;/p&gt;

&lt;p&gt;One should encourage the people who dissent, who shout and scream when they feel something is not right. Most of the times these people will help you avoid the proverbial iceberg.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Motivation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Motivation is a huge thing, and sometimes even Agile will not even identify it. Motivation degrades over time in situations where product is not released for a long time, there are constant changes within the sprint, there is mistrust among the team members or worse case some team members are disgruntled by organization policies or work culture. This situation demands extreme caution and monitoring that falls outside the Scrum purview. This can be indentified while going for team lunches, having one-on-ones with senior management or sometimes encouraging people to vent out their negative feelings. If any de-motivating factors are identified they should be fixed as soon as possible otherwise Scrum or no Scrum, the project is doomed.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sense of Purpose and Sense of Achievement&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The essence of a Sprint is to provide the team a sense of purpose and focus towards a limited set of problems or functionalites so that they can just think about a few tasks each and focus working on them. Developers work in a state of flow, they like it when things are organized and they know exactly what they have to do and what is the next item on their plate and nothing else. I have found programming to be a greater joy when I know exactly what is needed and the business value it will deliver. It makes me believe that my effort is helping someone and is driving the project forward. Same thing goes for a Sprint demo, if your spring demo is successful, celebrate a little, take the rest of the day off for open-source or gaming or whatever you fancy. Success and appreciation are highly addictive it will keep the team coming back for more.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Team Composition and Working Style&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Software projects are hard, not only technically but also in terms of team dynamics. Developers meet new team members, work with them for a while and the team is disbanded in six months or so. The whole process repeats itself time and again and is emotinally draining. The best performing teams I have met are the ones where every team member enjoy&amp;#8217;s the others&amp;#8217; company, cracks jokes, pulls pranks on each other and even enjoy the blaring music on their teammates&amp;#8217; laptop. This is very hard to achieve and I think the only one way to create such teams is being cautious during interviews. Try and identify the organization culture you want to develop, put it on your website, identify 5-6 culture related questions that you will ask in interviews. Build teams who can share a similar goal, for example a team where the PO is fine to release a half baked product as soon as possible and a team which wants to deliver to great product but with time will find it hard to work with each other. Agile may help you identify such symptoms but it may be too late to fix them by then.&lt;/p&gt;

&lt;p&gt;I hope you enjoyed reading this blog, feel free to comment on the non-tangibles of Agile which you feel are important but often ignored.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Blog moved to pure HTML5, CSS3</title>
    <link rel="http://rockyj.in" href="/2012/05/28/moved_to_html.html"/>
    <id>http://rockyj.in/2012/05/28/moved_to_html.html</id>
    <published>2012-05-28T00:00:00+05:30</published>
    <updated>2012-05-28T00:00:00+05:30</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;p&gt;I have recently moved the blog to pure HTML5 and CSS3 (as you can see) from Wordpress. It gives me more control over the layout, look and feel and also helps me express my ideas freely.&lt;/p&gt;

&lt;p&gt;However, the migration is far from complete. Few of my older blog posts might not show up or look funny. I am working to fix this. I am really sorry for the inconvenice.&lt;/p&gt;

&lt;p&gt;Some of your great comments have also been lost, something which I am again trying to fix.&lt;/p&gt;

&lt;p&gt;On the flip side, the new blog is built with &lt;a href='http://middlemanapp.com/'&gt;Middleman&lt;/a&gt;, Twitter bootstrap (with a resposive twist) and my own Nginx setup so it should feel much snappier and work on multiple devices. You can check out the source code on &lt;a href='https://github.com/rocky-jaiswal/my_blogs'&gt;github&lt;/a&gt;.&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;I have recently moved the blog to pure HTML5 and CSS3 (as you can see) from Wordpress. It gives me more control over the layout, look and feel and also helps me express my ideas freely.&lt;/p&gt;

&lt;p&gt;However, the migration is far from complete. Few of my older blog posts might not show up or look funny. I am working to fix this. I am really sorry for the inconvenice.&lt;/p&gt;

&lt;p&gt;Some of your great comments have also been lost, something which I am again trying to fix.&lt;/p&gt;

&lt;p&gt;On the flip side, the new blog is built with &lt;a href='http://middlemanapp.com/'&gt;Middleman&lt;/a&gt;, Twitter bootstrap (with a resposive twist) and my own Nginx setup so it should feel much snappier and work on multiple devices. You can check out the source code on &lt;a href='https://github.com/rocky-jaiswal/my_blogs'&gt;github&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Thanks for your patience.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>A gentle introduction to Backbone with jQuery</title>
    <link rel="http://rockyj.in" href="/2012/05/25/intro_to_backbone_jQuery.html"/>
    <id>http://rockyj.in/2012/05/25/intro_to_backbone_jQuery.html</id>
    <published>2012-05-25T00:00:00+05:30</published>
    <updated>2012-05-25T00:00:00+05:30</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;p&gt;Backbone is a great JavaScript framework, I am sure most developers would have heard about it. I spent some time learning Backbone and want to share the little I have learned so far.&lt;/p&gt;

&lt;p&gt;When you go to the backbone.js &lt;a href='http://backbonejs.org'&gt;page&lt;/a&gt; it gives you a very nice view of Backbone&amp;#8217;s api and a very small introduction. This was a problem was for a thick guy like me, the Backbone introduction was not good enough and most importantly it didn&amp;#8217;t answer when and why should I use backbone.&lt;/p&gt;

&lt;p&gt;After some Google searches, I learned that Backbone is good for organizing your JavaScript. As web developers we tend to do a lot of jQuery these days and more often than not jQuery can be pretty clean and decent. So why does one need Backbone? To answer this question lets build a small application in pure jQuery and then in Backbone + jQuery to see when and where Backbone helps.&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;Backbone is a great JavaScript framework, I am sure most developers would have heard about it. I spent some time learning Backbone and want to share the little I have learned so far.&lt;/p&gt;

&lt;p&gt;When you go to the backbone.js &lt;a href='http://backbonejs.org'&gt;page&lt;/a&gt; it gives you a very nice view of Backbone&amp;#8217;s api and a very small introduction. This was a problem was for a thick guy like me, the Backbone introduction was not good enough and most importantly it didn&amp;#8217;t answer when and why should I use backbone.&lt;/p&gt;

&lt;p&gt;After some Google searches, I learned that Backbone is good for organizing your JavaScript. As web developers we tend to do a lot of jQuery these days and more often than not jQuery can be pretty clean and decent. So why does one need Backbone? To answer this question lets build a small application in pure jQuery and then in Backbone + jQuery to see when and where Backbone helps.&lt;/p&gt;

&lt;p&gt;Our app is very simple. I have made a Rails application and scaffolded a model called User with fields of name, age etc. For those of you who are not familiar with Rails, basically I have created CRUD operations on a model User and exposed them RESTfully.&lt;/p&gt;

&lt;p&gt;I then created a few entries for the User model so that I have some data. Now to get started using jQuery, I built a form which has autocomplete so that it shows me the list of users as I type in a few characters in a text field. See image -&lt;/p&gt;

&lt;p&gt;&lt;img alt='jQuery UI Autocomplete' src='/images/autocomplete.png' /&gt; &lt;img alt='jQuery UI Autocomplete' src='/images/autocomplete_selected.png' /&gt;&lt;/p&gt;

&lt;p&gt;I have used jQuery, jQueryUI and underscore.js libraries to do this. Here is the code -&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;h1&amp;gt;Find Users&amp;lt;/h1&amp;gt;
&amp;lt;form action=&amp;quot;find&amp;quot; method=&amp;quot;get&amp;quot;&amp;gt;
  &amp;lt;input type=&amp;quot;text&amp;quot; placeholder=&amp;quot;Enter Name&amp;quot; id=&amp;quot;user-input&amp;quot;/&amp;gt;
&amp;lt;/form&amp;gt;
&amp;lt;div id=&amp;quot;user-selection&amp;quot; style=&amp;quot;margin-top:10px;&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;

&amp;lt;script&amp;gt;
  $(function() {
    function getNames() {
      var users = $.ajax({url : &amp;quot;/users.json&amp;quot;, async: false});
      var names = _.map(JSON.parse(users.responseText), function(user){return user.name});
      return names;
    }
    
    var names = getNames();
    
    $(&amp;quot;#user-input&amp;quot;).autocomplete({
      source : names,
      minLength : 2,
      select: function(event, ui){
        $(&amp;quot;#user-selection&amp;quot;).html(&amp;quot;Selected: &amp;quot; + ui.item.value);
      }
    });
  });
&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here we are basically using jQuery UI&amp;#8217;s autocomplete function and passing it the data source as a variable named &amp;#8220;names&amp;#8221;, which we populate through an AJAX call (with Rails we get the server code free when we scaffold). Since the /users.json call retuns other associated data in the JSON we need to clean it up (it contains other fields such as age, last_updated_at etc.).&lt;/p&gt;

&lt;p&gt;So we use the very good underscore.js library to convert this&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[{&amp;quot;name&amp;quot;:&amp;quot;rocky&amp;quot;, &amp;quot;age:32&amp;quot;, ...}, {&amp;quot;name&amp;quot;:&amp;quot;annie&amp;quot;, &amp;quot;age:31&amp;quot;, ...} ...] &lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;to&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[&amp;quot;rocky&amp;quot;, &amp;quot;annie&amp;quot; ...] &lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;using the &lt;a href='http://underscorejs.org/#map'&gt;&amp;#8220;map&amp;#8221;&lt;/a&gt; function. Please note that this is not the most efficient method for autocomplete as we are using AJAX to load all users in a JSON in one go but for our little experiment we will keep it this way.&lt;/p&gt;

&lt;p&gt;Finally when the user makes a selection we give some feedback and display the selected value in a div using jQuery.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Now lets use Backbone to rewrite this code. With Backbone we get a MVC kind of structure to our application. Here is the new code&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;h1&amp;gt;Find Users&amp;lt;/h1&amp;gt;
&amp;lt;form action=&amp;quot;find&amp;quot; method=&amp;quot;get&amp;quot;&amp;gt;
  &amp;lt;input type=&amp;quot;text&amp;quot; placeholder=&amp;quot;Enter Name&amp;quot; id=&amp;quot;user-input&amp;quot;/&amp;gt;
&amp;lt;/form&amp;gt;
&amp;lt;div id=&amp;quot;user-selection&amp;quot; style=&amp;quot;margin-top:10px;&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;

&amp;lt;script&amp;gt;
  $(function() {
    var User = Backbone.Model.extend({}); //Line 9

    var UserList = Backbone.Collection.extend({ //Line 11
      model: User,
      url: &amp;#39;/users.json&amp;#39;,
      parse: function(response) {
        return response;
      }
    });

    var SelectionView = Backbone.View.extend({ //Line 19
      el : $(&amp;#39;#user-selection&amp;#39;),
      render: function() {
        $(this.el).html(&amp;quot;You Selected : &amp;quot; + this.model.get(&amp;#39;name&amp;#39;)); //Line 22
        return this;
      },
    });

    var users = new UserList(); //Line 26
    users.fetch({async: false});
    var userNames = users.pluck(&amp;quot;name&amp;quot;);

    $(&amp;quot;#user-input&amp;quot;).autocomplete({ //Line 30
      source : userNames,
      minLength : 2,
      select: function(event, ui){ //Line 33
        var selectedModel = users.where({name: ui.item.value})[0];
        var view = new SelectionView({model: selectedModel});
        view.render();
      }
    });
  });
&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Don&amp;#8217;t worry if this looks too complicated. In 5 minutes, you will understand everything.&lt;/p&gt;

&lt;p&gt;Firstly, there is no change in HTML. I have delibrately kept it that way.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Lets start at line 9 - As evident our Model in MVC is User. We just declare a basic - Backbone Model.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Line 11 - Backbone added a Collections object to MVC because most of the time we are dealing with a collection of Models. Here extend a Collection, give it the model User as it will be a collection of model User we declared above. We give it a &amp;#8216;url&amp;#8217; from where this collection will be loaded and we provide a &amp;#8216;parse&amp;#8217; function. This parse is called whenever we fetch data from the server which we do on line 27 and saves us any JSON cleanup.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Line 19 - We declare a view here. For now ignore the code in there.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Line 26 to 28 - Intialize the collection, load the data through AJAX and pluck the &amp;#8220;name&amp;#8221; field out from JSON. In our pure jQuery implementation we used underscore&amp;#8217;s &amp;#8220;map&amp;#8221; for this.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Line 30 to 33 - No change from our pure jQuery implementation.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Line 34 - Here using Collection.where function we fetch the model that was selected. The user selects a string so we have to do this.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Line 35 - We instantiate our view and assign it the selected model.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Line 37 - We render our view.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let&amp;#8217;s now analyze our render function on line 22. this.model.get(&amp;#8216;name&amp;#8217;) will give you the selected model&amp;#8217;s name. We create a string by appending it with &amp;#8220;You Selected : &amp;#8220;.&lt;/p&gt;

&lt;p&gt;We all know what $(&amp;#8220;#some-id&amp;#8221;).html() will do. So what is &amp;#8220;el&amp;#8221;? Basically, all Backbone Views have an el property which is the DOM element it is binded to. If not specified it is a &amp;#8216;div&amp;#8217;. So we have binded our View to a div using a jQuery selector.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Talking of views we have manually set a string to be our HTML, this is ok for now but for more HTML Backbone also provides you with &amp;#8220;templates&amp;#8221; that can be compiled and added to your Views.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;That&amp;#8217;s it, now our code is better and much more modular. I can see that you may not be impressed. In my example there is not a huge benefit by using Backbone. But imagine an app that loads multiple models on a page, uses AJAX to sync them and maybe listens to events and executes callbacks, all this leads to spaghetti code which is ugly and unmaintainable. That is where the benefit of MVC will kick in.&lt;/p&gt;

&lt;p&gt;Also, if I had taken a bigger example it would have been difficult to explain it in one blog post. Probably that is why you don&amp;#8217;t see many simple examples of Backbone on the web.&lt;/p&gt;

&lt;p&gt;We really have scratched the surface of Backbone here. For example, since our event was triggered by autocomplete we could not programmatically bind it for re-rending the view. But in case of clicking a button or a link (which are the most common events on the web) we could have easily saved some code by declartively binding the click of a button to a view&amp;#8217;s rendering.&lt;/p&gt;

&lt;p&gt;I hope I have given you a small introduction to get started with Backbone. Please leave your comments for a better blog post next time.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Video of my talk with @arunagw at RubyConf India 2012</title>
    <link rel="http://rockyj.in" href="/2012/05/21/video_rubyconf_india.html"/>
    <id>http://rockyj.in/2012/05/21/video_rubyconf_india.html</id>
    <published>2012-05-21T00:00:00+05:30</published>
    <updated>2012-05-21T00:00:00+05:30</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;object height='315' width='560'&gt;&lt;param name='movie' value='http://www.youtube.com/v/Yx5PsEaC_48?version=3&amp;amp;hl=en_US' /&gt;&lt;param name='allowFullScreen' value='true' /&gt;&lt;param name='allowscriptaccess' value='always' /&gt;&lt;embed allowfullscreen='true' allowscriptaccess='always' height='315' src='http://www.youtube.com/v/Yx5PsEaC_48?version=3&amp;amp;hl=en_US' type='application/x-shockwave-flash' width='560' /&gt;&lt;/object&gt;</summary>
    <content type="html">&lt;object height='315' width='560'&gt;&lt;param name='movie' value='http://www.youtube.com/v/Yx5PsEaC_48?version=3&amp;amp;hl=en_US' /&gt;&lt;param name='allowFullScreen' value='true' /&gt;&lt;param name='allowscriptaccess' value='always' /&gt;&lt;embed allowfullscreen='true' allowscriptaccess='always' height='315' src='http://www.youtube.com/v/Yx5PsEaC_48?version=3&amp;amp;hl=en_US' type='application/x-shockwave-flash' width='560' /&gt;&lt;/object&gt;</content>
  </entry>
  <entry>
    <title>Setting up Solr</title>
    <link rel="http://rockyj.in" href="/2012/05/08/setting_up_solr.html"/>
    <id>http://rockyj.in/2012/05/08/setting_up_solr.html</id>
    <published>2012-05-08T00:00:00+05:30</published>
    <updated>2012-05-08T00:00:00+05:30</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;p&gt;Few of my Ruby friends have a hard time setting up Solr for their Prod / EC2 servers. Solr is a Java web application and also come with a Jetty distribution so that you can just do -&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;java -jar SOLR_DOWNLOAD/example/start.jar&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This however is not recommended for production as this is just running Solr on the bundled Jetty and Solr Admin is unsecured.&lt;/p&gt;

&lt;p&gt;To setup a clean and secure Solr instance, I usually do the following -&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Copy the $SOLR_DOWNLOAD/example/solr directory somewhere else. For example $HOME/config/solr. This is now your solr config directory.&lt;/li&gt;
&lt;/ol&gt;</summary>
    <content type="html">&lt;p&gt;Few of my Ruby friends have a hard time setting up Solr for their Prod / EC2 servers. Solr is a Java web application and also come with a Jetty distribution so that you can just do -&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;java -jar SOLR_DOWNLOAD/example/start.jar&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This however is not recommended for production as this is just running Solr on the bundled Jetty and Solr Admin is unsecured.&lt;/p&gt;

&lt;p&gt;To setup a clean and secure Solr instance, I usually do the following -&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Copy the $SOLR_DOWNLOAD/example/solr directory somewhere else. For example $HOME/config/solr. This is now your solr config directory.&lt;/li&gt;

&lt;li&gt;Download Tomcat and add the following line to $TOMCAT_HOME/bin/catalina.sh &lt;pre&gt;CATALINA_OPTS="-Dsolr.solr.home=/home/rockyj/conf/solr"&lt;/pre&gt; This basically sets the solr.solr.home Java environment variable.&lt;/li&gt;

&lt;li&gt;Copy the solr.war (you may need to rename this) from your SOLR_DOWNLOAD/dist to $TOMCAT_HOME/webapps.&lt;/li&gt;

&lt;li&gt;Start Tomcat &lt;pre&gt;$TOMCAT_HOME/bin/startup.sh&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;Go to http://localhost:8080/solr. You should see the Solr home page with the link to Admin page. The Admin is unsecured right now. The basic Solr installation works now.&lt;/li&gt;

&lt;li&gt;Shutdown Tomcat.&lt;/li&gt;

&lt;li&gt;Let us now add a Solr core. Solr core allow you to use a single Solr webapp with many configurations and indexes for different aplications, each with their own config and schema.&lt;/li&gt;

&lt;li&gt;In your $HOME/config/solr/solr.xml file edit the cores tag like this - &lt;pre&gt;
   &amp;lt;cores adminPath="/admin/cores" defaultCoreName="collection1"&amp;gt;
     &amp;lt;core name="collection1" instanceDir="." /&amp;gt;
     &amp;lt;core name="core1" instanceDir="./core1" /&amp;gt;
   &amp;lt;/cores&amp;gt;&lt;/pre&gt; This creates a new core which will look for its config in $HOME/config/solr/core1/ (in our case). The default core will be called &amp;#8220;collection1&amp;#8221; and our new core is &amp;#8220;core1&amp;#8221;.&lt;/li&gt;

&lt;li&gt;Now create a directory in your $HOME/config/solr called &amp;#8220;core1&amp;#8221; and copy the &amp;#8220;conf&amp;#8221; directory from $HOME/config/solr into the &amp;#8220;core1&amp;#8221; directory. Create an empty directory called &amp;#8220;data&amp;#8221; as well in &amp;#8220;core1&amp;#8221;.&lt;/li&gt;

&lt;li&gt;Now your new core is all setup. Restart Tomcat and check the admin page, you should see a new core listed there.&lt;/li&gt;

&lt;li&gt;Let us secure the admin page then. We will do this the standard Java way. In your $TOMCAT_HOME/webapps/solr/WEB-INF/web.xml add - &lt;pre&gt;
  &amp;lt;security-constraint&amp;gt;
    &amp;lt;web-resource-collection&amp;gt;
      &amp;lt;web-resource-name&amp;gt;Solr Admin&amp;lt;/web-resource-name&amp;gt;
      &amp;lt;url-pattern&amp;gt;/admin/*&amp;lt;/url-pattern&amp;gt;
      &amp;lt;url-pattern&amp;gt;/collection1/admin/*&amp;lt;/url-pattern&amp;gt;
      &amp;lt;url-pattern&amp;gt;/core1/admin/*&amp;lt;/url-pattern&amp;gt;
    &amp;lt;/web-resource-collection&amp;gt;
    &amp;lt;auth-constraint&amp;gt;
      &amp;lt;role-name&amp;gt;tomcat&amp;lt;/role-name&amp;gt;
    &amp;lt;/auth-constraint&amp;gt;
  &amp;lt;/security-constraint&amp;gt;
  &amp;lt;login-config&amp;gt;
    &amp;lt;auth-method&amp;gt;BASIC&amp;lt;/auth-method&amp;gt;
    &amp;lt;realm-name&amp;gt;default&amp;lt;/realm-name&amp;gt;
  &amp;lt;/login-config&amp;gt;
&lt;/pre&gt; Here we are basically securing url patterns (the admin pages) with HTTP BASIC and providing access to user &amp;#8220;tomcat&amp;#8221;.&lt;/li&gt;

&lt;li&gt;To activate the &amp;#8220;tomcat&amp;#8221; user, uncomment the tags in $TOMCAT_HOME/conf/tomcat-users.xml. You can change both the username and password there.&lt;/li&gt;

&lt;li&gt;That&amp;#8217;s it, once Tomcat is restarted, the admin urls should pop up a HTTP BASIC auth window.&lt;/li&gt;

&lt;li&gt;Finally don&amp;#8217;t forget to setup your firewall and block Tomcat&amp;#8217;s port 8080. For Ubuntu I highly recommend the ultra simple &amp;#8220;UFW&amp;#8221;.&lt;/li&gt;
&lt;/ol&gt;</content>
  </entry>
  <entry>
    <title>Old JBoss Video</title>
    <link rel="http://rockyj.in" href="/2012/03/27/old_jboss_video.html"/>
    <id>http://rockyj.in/2012/03/27/old_jboss_video.html</id>
    <published>2012-03-27T00:00:00+05:30</published>
    <updated>2012-03-27T00:00:00+05:30</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;p&gt;Found this old &amp;#8220;Migrating to JBoss&amp;#8221; video I did a long time back. Good old days :)&lt;/p&gt;
&lt;object height='315' width='420'&gt;&lt;param name='movie' value='http://www.youtube.com/v/gIybgjCnGZg?version=3&amp;amp;hl=en_US' /&gt;&lt;param name='allowFullScreen' value='true' /&gt;&lt;param name='allowscriptaccess' value='always' /&gt;&lt;embed allowfullscreen='true' allowscriptaccess='always' height='315' src='http://www.youtube.com/v/gIybgjCnGZg?version=3&amp;amp;hl=en_US' type='application/x-shockwave-flash' width='420' /&gt;&lt;/object&gt;</summary>
    <content type="html">&lt;p&gt;Found this old &amp;#8220;Migrating to JBoss&amp;#8221; video I did a long time back. Good old days :)&lt;/p&gt;
&lt;object height='315' width='420'&gt;&lt;param name='movie' value='http://www.youtube.com/v/gIybgjCnGZg?version=3&amp;amp;hl=en_US' /&gt;&lt;param name='allowFullScreen' value='true' /&gt;&lt;param name='allowscriptaccess' value='always' /&gt;&lt;embed allowfullscreen='true' allowscriptaccess='always' height='315' src='http://www.youtube.com/v/gIybgjCnGZg?version=3&amp;amp;hl=en_US' type='application/x-shockwave-flash' width='420' /&gt;&lt;/object&gt;</content>
  </entry>
  <entry>
    <title>Slides of my talk with @arunagw in Ruby Conf India 2012</title>
    <link rel="http://rockyj.in" href="/2012/03/26/ruby_conf_india_with_arunagw.html"/>
    <id>http://rockyj.in/2012/03/26/ruby_conf_india_with_arunagw.html</id>
    <published>2012-03-26T00:00:00+05:30</published>
    <updated>2012-03-26T00:00:00+05:30</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;object height='400' width='500'&gt;&lt;param name='movie' value='http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=torqueboxpres-120326001153-phpapp01' /&gt;&lt;param name='allowFullScreen' value='true' /&gt;&lt;param name='allowscriptaccess' value='always' /&gt;&lt;embed allowfullscreen='true' allowscriptaccess='always' height='400' src='http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=torqueboxpres-120326001153-phpapp01' type='application/x-shockwave-flash' width='500' /&gt;&lt;/object&gt;</summary>
    <content type="html">&lt;object height='400' width='500'&gt;&lt;param name='movie' value='http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=torqueboxpres-120326001153-phpapp01' /&gt;&lt;param name='allowFullScreen' value='true' /&gt;&lt;param name='allowscriptaccess' value='always' /&gt;&lt;embed allowfullscreen='true' allowscriptaccess='always' height='400' src='http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=torqueboxpres-120326001153-phpapp01' type='application/x-shockwave-flash' width='500' /&gt;&lt;/object&gt;</content>
  </entry>
  <entry>
    <title>Embracing JRuby - Part 1</title>
    <link rel="http://rockyj.in" href="/2012/03/23/embracing_jruby_1.html"/>
    <id>http://rockyj.in/2012/03/23/embracing_jruby_1.html</id>
    <published>2012-03-23T00:00:00+05:30</published>
    <updated>2012-03-23T00:00:00+05:30</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;p&gt;There is hardly any doubt that I am really in love with JRuby. It allows me to use the simplicity of Ruby and the power of Java. Highly robust application servers like Torquebox now fill the gap that was missing while deploying Rails application written in JRuby. In this first of a series of articles I will write how one can integrate Java applications with JRuby to create great products quickly and efficiently.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Calling Java from JRuby&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The simplest example would be -&lt;/p&gt;

&lt;p&gt;test_java.rb&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;require &amp;#39;java&amp;#39;&lt;/code&gt;&lt;/pre&gt;</summary>
    <content type="html">&lt;p&gt;There is hardly any doubt that I am really in love with JRuby. It allows me to use the simplicity of Ruby and the power of Java. Highly robust application servers like Torquebox now fill the gap that was missing while deploying Rails application written in JRuby. In this first of a series of articles I will write how one can integrate Java applications with JRuby to create great products quickly and efficiently.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Calling Java from JRuby&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The simplest example would be -&lt;/p&gt;

&lt;p&gt;test_java.rb&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;require &amp;#39;java&amp;#39;
java_import &amp;#39;java.lang.System&amp;#39;

puts System.currentTimeMillis&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In the code above we have called Java from JRuby. But what if we need to pass params to the Java class? Actually, numbers, strings and other simple types in Ruby are converted to equivalent Java objects. You can also pass basic collections like Arrays and Hashes. Another example would be -&lt;/p&gt;

&lt;p&gt;TestJava.java&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;public class TestJava {

  public String greet(String name){
    return &amp;quot;Hello &amp;quot; + name;
  }

}&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;test_java2.rb&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;require &amp;#39;java&amp;#39;

test_java = Java::TestJava.new

puts test_java.greet(&amp;#39;Rocky&amp;#39;)&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To run the above code, place the Java file in the same location as the Ruby file and compile the Java file first before running the Ruby code. To include other libraries make sure they are in the CLASSPATH (standard Java practice).&lt;/p&gt;

&lt;p&gt;Lets test out some collections.&lt;/p&gt;

&lt;p&gt;TestHash.java&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;public String stringify(Map&amp;lt;String, String&amp;gt; map){
    String rep = &amp;quot;&amp;quot;;
    for(String key : map.keySet()){
      rep = rep + key + &amp;quot;-&amp;gt;&amp;quot; + map.get(key) + &amp;quot;, &amp;quot;;
    }
    return rep;
  }&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;test_hash.rb&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;require &amp;#39;java&amp;#39;

test_java = Java::TestHash.new

puts test_java.stringify({&amp;#39;name&amp;#39; =&amp;gt; &amp;#39;rocky&amp;#39;, &amp;#39;age&amp;#39; =&amp;gt; &amp;#39;32&amp;#39;})&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So now we have learned how to use Java classes from JRuby. This has some neat practical applications, for example we can write a simple Ruby script to query a database and generate reports using robust Java database drivers and great HTML generating Ruby gems all at once. In the next article we will look at calling JRuby/Ruby code from Java.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Musings on India and Technology</title>
    <link rel="http://rockyj.in" href="/2012/03/05/musings_on_india_and_technology.html"/>
    <id>http://rockyj.in/2012/03/05/musings_on_india_and_technology.html</id>
    <published>2012-03-05T00:00:00+05:30</published>
    <updated>2012-03-05T00:00:00+05:30</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;p&gt;Ah India, how I love thee one day and absolutely abhor thee the other. But I am not here to talk about politics or the recently concluded UP elections but I want to talk about technology and India. Today, I saw a few tweets about how well Indians are doing in Silicon Valley and also learned that one of the founders of Foursquare (an idea and a company I deeply admire) is Indian (or of Indian origin).&lt;/p&gt;

&lt;p&gt;Back online we also see many posts of how mediocre Indian technologists are. It always makes me wonder of how a college graduate when placed in India stuggles with basic programming and in the US he goes on and makes a fortune for himself.&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;Ah India, how I love thee one day and absolutely abhor thee the other. But I am not here to talk about politics or the recently concluded UP elections but I want to talk about technology and India. Today, I saw a few tweets about how well Indians are doing in Silicon Valley and also learned that one of the founders of Foursquare (an idea and a company I deeply admire) is Indian (or of Indian origin).&lt;/p&gt;

&lt;p&gt;Back online we also see many posts of how mediocre Indian technologists are. It always makes me wonder of how a college graduate when placed in India stuggles with basic programming and in the US he goes on and makes a fortune for himself.&lt;/p&gt;

&lt;p&gt;Like with most things, I thought and thought for days about this dichotomy and then I tried to find the answer within myself. One of the words I could conjure up was &amp;#8220;Compromise&amp;#8221;.&lt;/p&gt;

&lt;p&gt;Now I have lived for a while in UK, Japan and US and what struck me most was the difference in &amp;#8220;Quality&amp;#8221; of everyday products. When I landed in Manchester for the first time (and that was my first flight and my first trip outside India), I was standing at an intersection as this buz whizzed past me and I was just awestruck at the poster on the bus. What hit me was that it was such high quality paper that could whither the incessant rain of Manchester and still shine through. On the other hand using the same analogy, the buses back in India are not so pretty. Compromises are made on every front either on account of cost cutting or through plain old corruption.&lt;/p&gt;

&lt;p&gt;&lt;img alt='Manchester Bus' src='http://upload.wikimedia.org/wikipedia/commons/0/09/Stagecoach_Manchester_bus_143.jpg' /&gt;&lt;/p&gt;

&lt;p&gt;We as kids in India are taught to &amp;#8220;adjust&amp;#8221; and &amp;#8220;compromise&amp;#8221;. For example, take a train ride, even if you have a booked seat (more like a bench) you will be asked to adjust or accomodate others. There is a constant struggle of resources be it education or parking slots and one has to constantly adjust. Offices cram in far more employees than planned and you can be termed as inflexible if you complain. The existence of a road even if it is a pothole-ridden one is celebrated. Most of our lives we compromise or are asked to compromise one way or the other. Recently, someone shared a video of the state of IIT hostels, it was not pretty viewing. From my own experience, my student days were far from decent quality living.&lt;/p&gt;

&lt;p&gt;I think all these factors slowly creep in one&amp;#8217;s system and it becomes second nature to cut corners and make compromises along the way. Of course, these are broad sweeping generalizations but these would be hard to contradict if one looks out of the window.&lt;/p&gt;

&lt;p&gt;It is with the same mindset that one completes engineering and secures a job. Futhermore hierarchical and manager driven organizations make it hard for a technologist to excel in his craft. Becoming a manager after 4 years of programming is seen as natural progression and a road to greater things.&lt;/p&gt;

&lt;p&gt;If you step in a traffic jam as soon as you step out of home and travel ten kms in one hour it becomes very difficult to come to office and deliver high quality software. I think efficiency breeds efficiency and art inspires art, if a developer sees a well planned city and a well planned route probably he is inspired to write better software. I would find it hard to imagine a guy like DHH who is so obsessed with quality, living in Gurgaon and writing Rails.&lt;/p&gt;

&lt;p&gt;To end my rant, what do we need to do to induce kickass product development in India or to make the next Facebook. I think we need to provide students and programmers a free open space where they no longer have to deal with any compromises. Allow people to work from home, let them live in Goa or Pondicherry or Ranikhet and write code. Improve the quality of life of the developer (be it through reducing commute or paying a better salary) and most probably the quality of code will improve.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>The Job of a Software Developer</title>
    <link rel="http://rockyj.in" href="/2012/01/31/job_of_a_software_developer.html"/>
    <id>http://rockyj.in/2012/01/31/job_of_a_software_developer.html</id>
    <published>2012-01-31T00:00:00+05:30</published>
    <updated>2012-01-31T00:00:00+05:30</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;p&gt;&lt;a href='http://www.quora.com/Engineering-Management/Why-are-software-development-task-estimations-regularly-off-by-a-factor-of-2-3'&gt;This&lt;/a&gt; is a great post. It is the kinda post that makes you want to jump up and shout &amp;#8220;Listen to this guy!&amp;#8221;.&lt;/p&gt;

&lt;p&gt;Software development is a weird job, I have been doing it for almost 10 years and everyday is completely new. Although now I feel, most of the problems in software development can be broken down into these categories -&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Communication&lt;/li&gt;

&lt;li&gt;Trust&lt;/li&gt;

&lt;li&gt;Requirement Management&lt;/li&gt;
&lt;/ul&gt;</summary>
    <content type="html">&lt;p&gt;&lt;a href='http://www.quora.com/Engineering-Management/Why-are-software-development-task-estimations-regularly-off-by-a-factor-of-2-3'&gt;This&lt;/a&gt; is a great post. It is the kinda post that makes you want to jump up and shout &amp;#8220;Listen to this guy!&amp;#8221;.&lt;/p&gt;

&lt;p&gt;Software development is a weird job, I have been doing it for almost 10 years and everyday is completely new. Although now I feel, most of the problems in software development can be broken down into these categories -&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Communication&lt;/li&gt;

&lt;li&gt;Trust&lt;/li&gt;

&lt;li&gt;Requirement Management&lt;/li&gt;

&lt;li&gt;Time Constraints&lt;/li&gt;

&lt;li&gt;Technical Debt&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Its amazing that how combination of these problems baffles every organization to this date. I saw many failed projects in the beginning of my career but when I discovered Agile, Scrum and XP it knocked me off. It seemed to me that everyone faced these problems and there were some very smart people who sat down and discussed these problems and came up with some recommendations. I followed these recommendations to the full and did a few successful projects.&lt;/p&gt;

&lt;p&gt;With Agile now gaining acceptance, I now see another set of problems. People who follow Agile but don&amp;#8217;t follow the full set of recommendations, for example working in Sprints but having Sprints without goals. Or working in Sprints but changing users stories everyday. Then there is the new breed of software developers who have not done any other methodology except Scrum and they feel Scrum itself is bloated. &amp;#8220;Who needs a planning meeting&amp;#8221; they will say. And there are Project Managers who have adopted Scrum because it is the &amp;#8220;in&amp;#8221; thing these days like some PMI certification read from books but in their heart of hearts they still consider software&#160;development&#160;as a command and control task done by &amp;#8220;resources&amp;#8221;.&lt;/p&gt;

&lt;p&gt;So amidst this all doom and gloom, what does the developer do? I have thought about it for days and there are only two things that we need to do -&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Write clean code everyday that is flexible and fully tested (unit + integration + functional).&lt;/li&gt;

&lt;li&gt;Plan and meet the Sprint goals.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For me, if a developer does these two things and these two things only he can&#160;hold his head high and go home&#160;even if everything else falls apart. Period.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>A weekend with CouchDB, Solr and Torquebox</title>
    <link rel="http://rockyj.in" href="/2011/12/27/a-weekend-with-couchdb-solr-and-torquebox.html"/>
    <id>http://rockyj.in/2011/12/27/a-weekend-with-couchdb-solr-and-torquebox.html</id>
    <published>2011-12-27T00:00:00+05:30</published>
    <updated>2011-12-27T00:00:00+05:30</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;p&gt;Ok, I am lying it was actually a long weekend and I had something working beforehand (but that was before I knew Ruby or really understood how to write decent Ruby code, I am just a little bit better now). I am really excited about JRuby, it has a bright future ahead once JDK 7 matures and InvokedDynamics stabilizes. So I decided to write a new application in JRuby and serve it with &lt;a href='http://torquebox.org/'&gt;Torquebox&lt;/a&gt;. For data persistence I chose CouchDB.&lt;/p&gt;

&lt;p&gt;With RVM and JDK in place I installed JRuby, installing Torquebox is as simple as doing -&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;Ok, I am lying it was actually a long weekend and I had something working beforehand (but that was before I knew Ruby or really understood how to write decent Ruby code, I am just a little bit better now). I am really excited about JRuby, it has a bright future ahead once JDK 7 matures and InvokedDynamics stabilizes. So I decided to write a new application in JRuby and serve it with &lt;a href='http://torquebox.org/'&gt;Torquebox&lt;/a&gt;. For data persistence I chose CouchDB.&lt;/p&gt;

&lt;p&gt;With RVM and JDK in place I installed JRuby, installing Torquebox is as simple as doing -&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    rvm jruby
    jruby -J-Xmx1024m -S gem install torquebox-server --pre&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Create a new Rails application as normal. Go to the root folder of that application and do -&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    torquebox deploy
    and
    torquebox run&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You application will now be served from port 8080 and works like a normal Rails application. Since I did not use any relational DB I disabled activerecord in application.rb.&lt;/p&gt;

&lt;p&gt;The application I made helps users in searching for verses in the Bible. So I downloaded and cleansed a pure text version of King James translation and wrote a script to store every verse as a CouchDB document.&lt;/p&gt;

&lt;p&gt;Since I also wanted search, I decided to use Solr. The catch with Solr is that there is hardly any documentation available. I decided to go with the Solr &amp;#8220;example&amp;#8221; setup. So you do a -&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    java -jar start.jar&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In the Solr example directory. The Solr config for this is located in the &amp;#8220;solr&amp;#8221; sub-directory.&lt;/p&gt;

&lt;p&gt;Next, I wanted to index each verse (a document in CouchDB) with Solr. In my gemfile, I included the &amp;#8220;RSolr&amp;#8221; and &amp;#8220;Couchrest&amp;#8221; gem, they provide a nice layer of abstraction over CouchDB and Solr. Next I wrote a Rake task -&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    namespace :solr do

    desc &amp;quot;Send docs from CouchDB to Solr for indexing&amp;quot;
    task :setup =&amp;gt; :environment do
    db = CouchRest.database(&amp;quot;http://localhost:5984/the_bible&amp;quot;)
    data = db.view(&amp;quot;verse/lookup&amp;quot;)[&amp;#39;rows&amp;#39;]

    solr = RSolr.connect :url =&amp;gt; &amp;#39;http://localhost:8983/solr&amp;#39;

    data.each do |record|
      id = record[&amp;#39;id&amp;#39;]
      value = record[&amp;#39;value&amp;#39;]
      solr.add(:id =&amp;gt; id, :verse =&amp;gt; value)
    end
    solr.update :data =&amp;gt; &amp;#39;&amp;lt;commit/&amp;gt;&amp;#39;
    end

    desc &amp;quot;Search for verse - just for testing setup&amp;quot;
    task :search =&amp;gt; :environment do
    solr = RSolr.connect :url =&amp;gt; &amp;#39;http://localhost:8983/solr&amp;#39;
    response = solr.get &amp;#39;select&amp;#39;, :params =&amp;gt; {
        :q=&amp;gt;&amp;#39;verse:Jesus&amp;#39;,
        :start=&amp;gt;0,
        :rows=&amp;gt;10
    }
    puts response.inspect
    end

    end&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Basically, the setup task queries a CouchDB view (which returns all the verses) and using RSolr I submit these documents to Solr, note that documents in both CouchDB and Solr use the same id, this helps me in retrieval later.&lt;/p&gt;

&lt;p&gt;Basically, I got this idea as both CouchDB and Solr speak JSON. So I can store documents in CouchDB and retrieve them as JSON and store the same JSON in Solr for searching.&lt;/p&gt;

&lt;p&gt;In Solr, I am submitting my documents with the field name &amp;#8220;verse&amp;#8221;, this requires a change in Solr schema. I realized this after a lot of head-banging. Just open schema.xml and add a new field &amp;#8220;verse&amp;#8221; with the type &amp;#8220;free_text&amp;#8221;. There are already some examples present, you can&amp;#8217;t go wrong.&lt;/p&gt;

&lt;p&gt;That&amp;#8217;s it for simple read-only data we are all done. If your data is updatable, on each update of CouchDB write a background job that updates Solr as well.&lt;/p&gt;

&lt;p&gt;My site is available at - &lt;a href='http://biblefind.in'&gt;here&lt;/a&gt; and the whole source code on &lt;a href='https://github.com/rocky-jaiswal/biblefind'&gt;github&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Configuring nginx with JBoss / Tomcat</title>
    <link rel="http://rockyj.in" href="/2011/12/27/configuring-nginx-with-jboss-tomcat.html"/>
    <id>http://rockyj.in/2011/12/27/configuring-nginx-with-jboss-tomcat.html</id>
    <published>2011-12-27T00:00:00+05:30</published>
    <updated>2011-12-27T00:00:00+05:30</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;p&gt;So you have brought a new EC2 machine. You are a Java / JRuby / Scala developer and you are all excited to put your site out to the world. Problem is your server JBoss / Tomcat runs on port 8080 and that port is blocked by the in-built firewall. You can open the port but you also don&amp;#8217;t want your users to type &amp;#8220;:8080&amp;#8221; after your site name as it doesn&amp;#8217;t look very professional.&lt;/p&gt;

&lt;p&gt;So worry not my friend, coz you can setup your site to be served on Port 80 in a few minutes. I hope you know about nginx, it is a great web server and some claim that it is faster than apache. So do a -&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;So you have brought a new EC2 machine. You are a Java / JRuby / Scala developer and you are all excited to put your site out to the world. Problem is your server JBoss / Tomcat runs on port 8080 and that port is blocked by the in-built firewall. You can open the port but you also don&amp;#8217;t want your users to type &amp;#8220;:8080&amp;#8221; after your site name as it doesn&amp;#8217;t look very professional.&lt;/p&gt;

&lt;p&gt;So worry not my friend, coz you can setup your site to be served on Port 80 in a few minutes. I hope you know about nginx, it is a great web server and some claim that it is faster than apache. So do a -&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    sudo apt-get install nginx&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hit the server&amp;#8217;s IP now and you should see nginx&amp;#8217;s default page.&lt;/p&gt;

&lt;p&gt;Now start your Tomcat / JBoss server as usual.&lt;/p&gt;

&lt;p&gt;Edit the nginx config file and add the following &lt;strong&gt;under http {}&lt;/strong&gt; -&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    sudo vi /etc/nginx/nginx.conf

    server {
        listen A.B.C.D:80;
        server_name A.B.C.D;
        location / {
            root /some/public/folder;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://localhost:8080;
        }
    }&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Replace &lt;strong&gt;A.B.C.D&lt;/strong&gt; with your public IP (elastic IP for EC2) or if you have brought a domain name then you can specify it as well.&lt;/p&gt;

&lt;p&gt;Now, restart nginx with &lt;strong&gt;sudo /etc/init.d/nginx restart&lt;/strong&gt; and voila your JVM application will now be served from port 80.&lt;/p&gt;

&lt;p&gt;The advantage of this setup is that you can further configure nginx to serve your static assets like images (nginx is pretty good with that) and leave JVM application to be served from Tomcat / JBoss, just as it is meant to be.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>jQuery flavored CoffeeScript</title>
    <link rel="http://rockyj.in" href="/2011/12/01/jquery-flavored-coffeescript.html"/>
    <id>http://rockyj.in/2011/12/01/jquery-flavored-coffeescript.html</id>
    <published>2011-12-01T00:00:00+05:30</published>
    <updated>2011-12-01T00:00:00+05:30</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;p&gt;After much discussion, Rails 3.1 included CoffeeScript by default. The inclusion of CoffeeScript in Rails is a testament of the quality and popularity of CoffeeScript.&lt;/p&gt;

&lt;p&gt;So in a Rails 3.1 application if you do - bundle exec rails g controller Pages home&lt;/p&gt;

&lt;p&gt;You get an output like the following - create app/controllers/pages_controller.rb route get &amp;#8220;pages/home&amp;#8221; &amp;#8230; invoke assets invoke coffee create app/assets/javascripts/pages.js.coffee&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;After much discussion, Rails 3.1 included CoffeeScript by default. The inclusion of CoffeeScript in Rails is a testament of the quality and popularity of CoffeeScript.&lt;/p&gt;

&lt;p&gt;So in a Rails 3.1 application if you do - bundle exec rails g controller Pages home&lt;/p&gt;

&lt;p&gt;You get an output like the following - create app/controllers/pages_controller.rb route get &amp;#8220;pages/home&amp;#8221; &amp;#8230; invoke assets invoke coffee create app/assets/javascripts/pages.js.coffee&lt;/p&gt;

&lt;p&gt;As you can see from the output above Rails will generate a .coffee file for you with the controller.&lt;/p&gt;

&lt;p&gt;CoffeeScript is a beautiful language and enables you to write clean code and escape the nuances of JavaScript.&lt;/p&gt;

&lt;p&gt;A function declaration in CoffeeScript is as simple as&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;greeter = -&amp;gt; &amp;quot;Hello World!&amp;quot;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The two keys in CoffeeScript &amp;#8220;-&amp;#8221; and &amp;#8221;&amp;gt;&amp;#8221; are enough to declare a function in JavaScript.&lt;/p&gt;

&lt;p&gt;With these things in mind, I decided to write jQuery code in JavaScript. After all, if we intend to write JavaScript for our web application there is no escaping jQuery.&lt;/p&gt;

&lt;p&gt;Lets say our haml/html is like %h1 Hello World! = link_to &amp;#8220;Click Me&amp;#8221;, &amp;#8221;#&amp;#8221;, .message Say hello to my new friend!&lt;/p&gt;

&lt;p&gt;Which renders to - &lt;img alt='coffee' src='/images/hello_coffee.jpg' /&gt;&lt;/p&gt;

&lt;p&gt;Nothing much going on here. To test jQuery, all we need to write is -&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ -&amp;gt; alert(&amp;quot;jQuery works!&amp;quot;)&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That&amp;#8217;s it!!&lt;/p&gt;

&lt;p&gt;this translates to -&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$(function() {
    return alert(&amp;quot;jQuery Works!!&amp;quot;);
  });&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So in CoffeeScript, intializing jQuery amounts to writing &lt;strong&gt;&amp;#8221;$ -&amp;gt;&amp;#8221;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Now let&amp;#8217;s write a simple function to make a hidden div visible.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ -&amp;gt; $(&amp;quot;#click_me_link&amp;quot;).click(show_message)
show_message = -&amp;gt; $(&amp;quot;.message&amp;quot;).css(&amp;quot;visibility&amp;quot;, &amp;quot;visible&amp;quot;)&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;this converts to -&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$(function() {
    return $(&amp;quot;#click_me_link&amp;quot;).click(show_message);
  });

  show_message = function() {
    return $(&amp;quot;.message&amp;quot;).css(&amp;quot;visibility&amp;quot;, &amp;quot;visible&amp;quot;);
  };&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The CoffeeScript code above is pretty clean and self explanatory. The most important thing is that I have just written two lines of &lt;strong&gt;clean&lt;/strong&gt; code (it can even be compressed to one), this typically converts to 6 lines of JavaScript (even if we forget the curly braces and the parentheses).&lt;/p&gt;

&lt;p&gt;So go forth my friend and write your JavaScript code in CoffeeScript and make your life simpler!&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>And then there was Closure</title>
    <link rel="http://rockyj.in" href="/2011/07/26/and-then-there-was-closure.html"/>
    <id>http://rockyj.in/2011/07/26/and-then-there-was-closure.html</id>
    <published>2011-07-26T00:00:00+05:30</published>
    <updated>2011-07-26T00:00:00+05:30</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;p&gt;A while back when I introduced Ruby to a few fellow Java developers they were intrigued by Closures / Lambdas. For most Java developers its difficult to understand what the hullabaloo around Closures and Functional programming is. What more, one might be a Ruby programmer for years and write code without ever creating Closures and doing functional programming. With the Object Oriented way of thinking, data is stored in fields and operations on this data is done by methods. Why in this wide world does one need Closures? I thought for a long time about the answer to this question and as I started learning JavaScript I realized the beauty of Closures and functional programming.&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;A while back when I introduced Ruby to a few fellow Java developers they were intrigued by Closures / Lambdas. For most Java developers its difficult to understand what the hullabaloo around Closures and Functional programming is. What more, one might be a Ruby programmer for years and write code without ever creating Closures and doing functional programming. With the Object Oriented way of thinking, data is stored in fields and operations on this data is done by methods. Why in this wide world does one need Closures? I thought for a long time about the answer to this question and as I started learning JavaScript I realized the beauty of Closures and functional programming.&lt;/p&gt;

&lt;p&gt;Below is a simple code problem written in Java and Ruby which I hope will help some of the Java developers understand Closures and also help us answer the question - Why we need Closures?&lt;/p&gt;

&lt;p&gt;The problem is simple, I have a User class which has many fields like name, age, department code etc. I want to sort a list of users based on any of the fields it contains.&lt;/p&gt;

&lt;p&gt;Below is the sample User class in Java and Ruby.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;//Java Code
class User {
    
    private String name;
    private Integer age;

    public User(String name, Integer age) {
        this.name = name;
        this.age = age;
    }
    
    public Integer getAge() {
        return age;
    }

    public void setAge(Integer age) {
        this.age = age;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Override
    public String toString() {
        return &amp;quot;User &amp;quot; + this.getName() + &amp;quot; - &amp;quot; + this.getAge();
    }
    
}&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ruby class User attr_accessor :name, :age&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  def initialize(name, age)
    @name = name
    @age = age
  end

  def to_s
    &amp;quot;User #{name} - #{age}&amp;quot;
  end

end&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Simple enough.&lt;/p&gt;

&lt;p&gt;To sort a list of Users based on a parameter that is passed, Java will have code somewhat like this -&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;public class Sorter {
    
    public static void main(String args[]) {
        Sorter sorter = new Sorter();
        
        User user1 = new User(&amp;quot;Rocky&amp;quot;, 31);
        User user2 = new User(&amp;quot;Aditya&amp;quot;, 30);
        User user3 = new User(&amp;quot;Sukhpal&amp;quot;, 32);
        List&amp;lt;User&amp;gt; users = Arrays.asList(user1, user2, user3);
        
        if(args[0].equals(&amp;quot;name&amp;quot;)) {
            sorter.sortOnName(users);
        }
        if(args[0].equals(&amp;quot;age&amp;quot;)) {
            sorter.sortOnAge(users);
        }   
        System.out.println(users);
    }
    
    List&amp;lt;User&amp;gt; sortOnName(List&amp;lt;User&amp;gt; users) {
        Collections.sort(users, new Comparator&amp;lt;User&amp;gt;() {
            @Override
            public int compare(User o1, User o2) {
                return o1.getName().compareTo(o2.getName());
            }
        });
        return users;
    }

    List&amp;lt;User&amp;gt; sortOnAge(List&amp;lt;User&amp;gt; users) {
        Collections.sort(users, new Comparator&amp;lt;User&amp;gt;() {
            @Override
            public int compare(User o1, User o2) {
                return o1.getAge().compareTo(o2.getAge());
            }
        });
        return users;
    }
    
}&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So in the main method we are creating a few users just for testing (yes I could have done this in a test case) and then we are invoking the sorting code based on a parameter. To sort we are using the &amp;#8220;sort&amp;#8221; utility method provided in Collections class which expects the list and a Comparator object. We are creating the Comparator object inline and passing it.&lt;/p&gt;

&lt;p&gt;In comparison, to do the same thing in Ruby we have to do this -&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;user1 = User.new(&amp;quot;Rocky&amp;quot;, 31)
user2 = User.new(&amp;quot;Aditya&amp;quot;, 30)
user3 = User.new(&amp;quot;Sukhpal&amp;quot;, 32)
user4 = User.new(&amp;quot;Rohan&amp;quot;, 25)

users = [user1, user2, user3, user4]

sorter = -&amp;gt;(user_x, user_y){ user_x.name &amp;lt;=&amp;gt; user_y.name } if(ARGV[0] == &amp;quot;name&amp;quot;)
sorter = -&amp;gt;(user_x, user_y){ user_x.age &amp;lt;=&amp;gt; user_y.age } if(ARGV[0] == &amp;quot;age&amp;quot;)

puts users.sort(&amp;amp;sorter)&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The first thing that strikes you about the Ruby code is how small it is. If we ignore creation of the test data this code is merely 3 lines, as compared to around 20 lines in Java (assuming we are trying to do some clean coding). Moreover adding a new &amp;#8220;sortable&amp;#8221; field in Java is around 8-10 lines of code and in Ruby its just one line!&lt;/p&gt;

&lt;p&gt;Lets try and understand what Ruby is doing. Line 8 is where the magic happens, simply speaking Closures are methods that can be passed around as values. So you can store a function in an array, retrieve it by the array&amp;#8217;s index and execute it. So in this line we are creating a function that expects two parameters (inside the two parentheses) and has the body (inside the curly braces) where we are doing comparison (using Ruby&amp;#8217;s &amp;lt;=&amp;gt; operator). Of course, since Ruby is a dynamic language, there are no types associated with the variables.&lt;/p&gt;

&lt;p&gt;So in this logic we define our closure based on the parameter passed (lines 8 and 9) and hold it&amp;#8217;s reference in the variable &amp;#8220;sorter&amp;#8221;.&lt;/p&gt;

&lt;p&gt;Finally we call the Array.sort method which expects a code block / closure that does the comparison. In our case we pass the sorter&amp;#8217;s reference and we are all done.&lt;/p&gt;

&lt;p&gt;Now the question comes why are we doing all this. As mentioned earlier, the number of lines of code in the Ruby solution is drastically less which means lesser lines to test and lesser lines to maintain and consequently the code has lesser chances of breaking. One still might argue that for an end user or my non-technical manager it only matters that a job is done, no matter how. But even for them functional programming brings added robustness to software and scales well too (e.g. adding a new &amp;#8220;sortable&amp;#8221; field). For a developer, its also about software craftsmanship and improving the way we code day in and day out.&lt;/p&gt;

&lt;p&gt;Finally, if you think that Ruby&amp;#8217;s dynamic typing is too much for you and you miss type safety, generics etc. and you still want to do functional programming try &lt;strong&gt;Scala&lt;/strong&gt;. It is an Object Oriented yet Functional, type safe programming language which runs on JVM. More on it later :).&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>The problem is choice</title>
    <link rel="http://rockyj.in" href="/2011/07/04/the-problem-is-choice.html"/>
    <id>http://rockyj.in/2011/07/04/the-problem-is-choice.html</id>
    <published>2011-07-04T00:00:00+05:30</published>
    <updated>2011-07-04T00:00:00+05:30</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;p&gt;One of my favorite dialog exchange in movies is the one between Neo and the Architect towards the end of &lt;strong&gt;Matrix Reloaded&lt;/strong&gt;. Who can forget - &amp;#8221;&lt;a href='http://www.leesmovieinfo.net/special/MatrixReloadedSpeech1.php' target='_blank'&gt;Your life is the sum of a remainder of an unbalanced equation inherent to the programming of the matrix.&lt;/a&gt;.&amp;#8221; In this conversation Neo also remarks - &amp;#8220;Choice, the problem is choice.&amp;#8221;&lt;/p&gt;

&lt;p&gt;Last year I was giving a client interview and the client asked me if I would use Stored Procedures for queries or use an abstraction like Hibernate to interact with the database. My answer was Hibernate. We discussed the pros and cons of each option and while we knew that Stored Procs would be a lot faster in comparison to Hibernate queries, Hibernate still enables me to write clean and testable code.&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;One of my favorite dialog exchange in movies is the one between Neo and the Architect towards the end of &lt;strong&gt;Matrix Reloaded&lt;/strong&gt;. Who can forget - &amp;#8221;&lt;a href='http://www.leesmovieinfo.net/special/MatrixReloadedSpeech1.php' target='_blank'&gt;Your life is the sum of a remainder of an unbalanced equation inherent to the programming of the matrix.&lt;/a&gt;.&amp;#8221; In this conversation Neo also remarks - &amp;#8220;Choice, the problem is choice.&amp;#8221;&lt;/p&gt;

&lt;p&gt;Last year I was giving a client interview and the client asked me if I would use Stored Procedures for queries or use an abstraction like Hibernate to interact with the database. My answer was Hibernate. We discussed the pros and cons of each option and while we knew that Stored Procs would be a lot faster in comparison to Hibernate queries, Hibernate still enables me to write clean and testable code.&lt;/p&gt;

&lt;p&gt;When we write software we are face choices every day, day in and day out. From a simple &amp;#8220;What should I name this method&amp;#8221; to a broader &amp;#8220;Should I use X library or Y&amp;#8221;. In the beginning of a project the choices are even harder, should I use Java or Ruby or .Net or Scala for example.&lt;/p&gt;

&lt;p&gt;Personally, based of experience, I now follow a few guidelines when I face these choices -&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It is unit testable?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is one of the most important factors that I consider when choosing one technology over another. Over the years as a software developer I have learned one thing - &lt;strong&gt;the cost of maintaining software is much much higher than developing it&lt;/strong&gt;. I am sure after two to three years, someone will be trying to understand the code that I write today and refactor/re-engineer it. Unit tests for my code today will make the future developers&amp;#8217; task infinitely easier than what it would be if my code does not have unit tests. Remember the granularity of unit tests is also the degree of maintainability. Unit testing not only makes the code stable and predictable but also infinitely maintainable.&lt;/p&gt;

&lt;p&gt;This is also one of my major gripes with Stored Procedure. Also if my application logic is lets say half in Java and half in Stored Procedures (and I have done this mistake myself) it would a pain to enhance / bug fix that software.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Use as small a technology stack as possible&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If possible and if you are not dealing with huge traffic try to keep the technology stack as minimal as possible. Of course, some programming languages do somethings well, like Adobe Flex for rich UI intensive applications and Scala for high concurrency. So for a highly concurrent and rich web app I can mix and match Scala and Flex. But one should avoid adding more programming languages / software unless one really needs it for a single product.&lt;/p&gt;

&lt;p&gt;For example, you may know both Perl and Java and for a product you can create the data loading process in Perl and the web application in Java but imagine what it will take to maintain that project. It will either be just you working on that product till its EOL or your manager will have to hire two guys to maintain it. Maintenance of multi-technology projects is generally a nightmare, it additionally increases complexity while deployment.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;No specific software / platform dependency&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In the beginning of my career, I developed a mapping applications like Google Maps. At that time IE6 was the only browser used within the enterprise and the rest of the world. Our entire application worked on a Map which was rendered on IE6 and displayed in a proprietary ActiveX plug-in with a JavaScript API. I now believe that this application would either have been binned / re-written / or will be forcing the organization to stick to IE6. This is just after 5 years after the application&amp;#8217;s go-live date.&lt;/p&gt;

&lt;p&gt;Any technology that we bind our software with will become obsolete in few years for sure. It is always better to write code even if it takes more time in a platform independent way. This is another factor against stored procedures or any database dependent code. What if MS SQL Server raises its license price for a new version and the organization you are working with decides to go with Sybase (for example)? All your Stored Procedures have to be re-written/re-tested on the new database which is a huge cost. Do yourself and your organization a favor and do not stick your code to a single platform.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Zero compromises on design decisions&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There are the day-to-day design problems we face. Most of the times we get the choices - I can do X in 2 ways. A is easy to do but not maintainable, B is not so easy to do but will jack my development time by two sprints. I guess I will go with A and get it done with. Some brave developers though will choose B knowing that they may face the wrath of the Product Owner and it will take the whole project back to the design board but I can say it beyond an iota of doubt that one should always choose B.&lt;/p&gt;

&lt;p&gt;Bad software isn&amp;#8217;t written in one day. It written when someday one small compromise is made in design to save time and the next day another minor compromise is made in a small cubicle. After two years of software use, the same management who gives you the go ahead to cut corners will say - &amp;#8220;Who wrote this piece of s*** software!!&amp;#8221; Don&amp;#8217;t fall into this trap. You will get only one chance to develop a piece of software on a clean slate, do it in the best possible manner without any compromise. Even one compromise will make the whole product unstable, no chain can be stronger than the weakest link.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Clean code over anything else&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When coding follow OO principles (if you are using a OO language i.e.), name you methods and variables properly even if the name is very long, keep the cyclomatic complexity of a method to the minimum, follow TDD if you can. We all know this list, but we need to decide on a bare minimum and pin it to our desks or on our minds. Let this be a &amp;#8220;No Compromise&amp;#8221; list which improves as you gain experience. Your Product Owner may not know this, the user will never care for it as long as it works. But remember the old saying - &amp;#8220;Write code as if you know that the guy who will maintain it is a psychopathic axe murderer who knows where you live.&amp;#8221; :)&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Using Spring for Scheduling Tasks</title>
    <link rel="http://rockyj.in" href="/2011/06/29/2011-06-29-using-spring-for-scheduling-tasks.html"/>
    <id>http://rockyj.in/2011/06/29/2011-06-29-using-spring-for-scheduling-tasks.html</id>
    <published>2011-06-29T00:00:00+05:30</published>
    <updated>2011-06-29T00:00:00+05:30</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;p&gt;One of the common requirements we face as developers is to do things in a scheduled manner. For example, check database for change every 10 mins and do something if a change has occurred or send emails at a specific time. The Spring documentation is a bit thin on this one although Spring does a fantastic job of scheduling things. So in this blog I am going explain how I used Spring for scheduling things. Please note I am using Spring 3.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    &amp;lt;strong&amp;gt;First of all here is my Spring application context file to enable annotations etc.&amp;lt;/strong&amp;gt;&lt;/code&gt;&lt;/pre&gt;</summary>
    <content type="html">&lt;p&gt;One of the common requirements we face as developers is to do things in a scheduled manner. For example, check database for change every 10 mins and do something if a change has occurred or send emails at a specific time. The Spring documentation is a bit thin on this one although Spring does a fantastic job of scheduling things. So in this blog I am going explain how I used Spring for scheduling things. Please note I am using Spring 3.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    &amp;lt;strong&amp;gt;First of all here is my Spring application context file to enable annotations etc.&amp;lt;/strong&amp;gt;
    &amp;lt;beans xmlns=&amp;quot;http://www.springframework.org/schema/beans&amp;quot;
    	xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot; xmlns:p=&amp;quot;http://www.springframework.org/schema/p&amp;quot;
    	xmlns:context=&amp;quot;http://www.springframework.org/schema/context&amp;quot; xmlns:tx=&amp;quot;http://www.springframework.org/schema/tx&amp;quot;
    	xmlns:security=&amp;quot;http://www.springframework.org/schema/security&amp;quot;
    	xsi:schemaLocation=&amp;quot;
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
    http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.3.xsd&amp;quot;&amp;gt;

        &amp;lt;context:component-scan base-package=&amp;quot;in.rockyj&amp;quot; /&amp;gt;
        
        &amp;lt;context:property-placeholder location=&amp;quot;classpath:/dev.app.properties&amp;quot;/&amp;gt;
        
        &amp;lt;bean id=&amp;quot;threadPoolTaskScheduler&amp;quot; class=&amp;quot;org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler&amp;quot;&amp;gt;
            &amp;lt;property name=&amp;quot;poolSize&amp;quot; value=&amp;quot;3&amp;quot; /&amp;gt;
        &amp;lt;/bean&amp;gt;

    &amp;lt;/beans&amp;gt;

    Here I am doing three things basically - 
    1. Setting up a component scan for handling Spring annotations 
    2. Informing Spring about a properties file 
    3. Setting up a bean - ThreadPoolTaskScheduler which is a Spring provided class for scheduling stuff.

    The ThreadPoolTaskScheduler a Spring provided class that handles the scheduling logic for us. All it needs is a thread pool size which defaults to 1. This class provides various methods to schedule tasks, for example scheduleWithFixedDelay method takes two parameters - a runnable task and the delay after which the task should be run. For example see code below -

    &amp;lt;strong&amp;gt;in my properties file there is only one entry -&amp;lt;/strong&amp;gt;
    service.pollTime=10000

    &amp;lt;strong&amp;gt;My main Scheduler class -&amp;lt;/strong&amp;gt;
    @Component
    public class Scheduler {

        @Resource
        ThreadPoolTaskScheduler threadPoolTaskScheduler;
        
        @Resource
        Worker worker;
        
        @Value(&amp;quot;${service.pollTime}&amp;quot;)
        Long servicePollTime;
        
        /**
         * Schedule the run of the worker
         */
        public void schedule() {
            threadPoolTaskScheduler.scheduleWithFixedDelay(worker, servicePollTime);
        }
    }

    &amp;lt;strong&amp;gt;My Worker class -&amp;lt;/strong&amp;gt;
    @Component
    public class Worker implements Runnable {
        
        @Override
        public void run() {
            //Main task goes here - For example just a console output
            System.out.println(Thread.currentThread().getName() + &amp;quot; working ... Time - &amp;quot; + new Date());
        }
        
    }

    &amp;lt;strong&amp;gt;And finally my main class -&amp;lt;/strong&amp;gt;
    public class App {

        /**
         * Main method to run the application
         */
        public static void main(String[] args) {
            ApplicationContext context = loadSpringContext();
            Scheduler scheduler = context.getBean(Scheduler.class);
            scheduler.schedule();
        }


        private static ApplicationContext loadSpringContext() {
            ClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext(&amp;quot;classpath*:applicationContext.xml&amp;quot;);
            context.start();
            return context;
        }
    }

    &amp;lt;strong&amp;gt;Which gives me the output -&amp;lt;/strong&amp;gt;
    threadPoolTaskScheduler-1 working ... Time - Wed Jun 29 13:02:17 IST 2011
    threadPoolTaskScheduler-1 working ... Time - Wed Jun 29 13:02:27 IST 2011
    threadPoolTaskScheduler-1 working ... Time - Wed Jun 29 13:02:37 IST 2011
    ...


    This is pretty self explanatory stuff. The main advantage here is that I have not cluttered my code with any Scheduling logic, the classes are loosely coupled and everything is 100% testable. :)&lt;/code&gt;&lt;/pre&gt;</content>
  </entry>
  <entry>
    <title>Excel manipulation and testing in Java</title>
    <link rel="http://rockyj.in" href="/2011/06/25/2011-06-25-excel-manipulation-and-testing-in-java.html"/>
    <id>http://rockyj.in/2011/06/25/2011-06-25-excel-manipulation-and-testing-in-java.html</id>
    <published>2011-06-25T00:00:00+05:30</published>
    <updated>2011-06-25T00:00:00+05:30</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;p&gt;In my current project I am doing a lot of Excel manipulation using Apache POI and Jacob COM libraries. One of the first challenges I faced was to write test cases that could read these Excel files and process them. This wasn&amp;#8217;t rocket science, but I want to blog about this so that a. I can share my approach and b. So that I can use this blog post in case I want to do this in the future.&lt;/p&gt;

&lt;p&gt;So my Excel file which I want to test is stored in /src/test/resources as Gantt_XLS.xls in a Maven setup. So here is my test case -&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;In my current project I am doing a lot of Excel manipulation using Apache POI and Jacob COM libraries. One of the first challenges I faced was to write test cases that could read these Excel files and process them. This wasn&amp;#8217;t rocket science, but I want to blog about this so that a. I can share my approach and b. So that I can use this blog post in case I want to do this in the future.&lt;/p&gt;

&lt;p&gt;So my Excel file which I want to test is stored in /src/test/resources as Gantt_XLS.xls in a Maven setup. So here is my test case -&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    @Test
        public void shouldConvertExcelFile() throws IOException {
            InputStream inputStream = getClass().getResourceAsStream(&amp;quot;/Gantt_XLS.xls&amp;quot;);
            File file = convertToFile(inputStream);
            
            String outpath = FileUtils.getTempDirectory().getCanonicalPath() + File.separator + UUID.randomUUID().toString();
            FileUtils.forceMkdir(new File(outpath));
            
            excelConverter.doExcelConversion(file, outpath);
            
            Assert.assertTrue(fileStatusMap.get(&amp;quot;Gantt_XLS.xls&amp;quot;).equals(FileStatus.CONVERTED_TO_EXCEL));
        }

        private File convertToFile(InputStream inputStream) throws IOException {
            String path = FileUtils.getTempDirectoryPath() + File.separator + UUID.randomUUID().toString() + File.separator;
            FileUtils.forceMkdir(new File(path));
            File f = new File(path + &amp;quot;Gantt_XLS.xls&amp;quot;);
            OutputStream out = new FileOutputStream(f);
            byte buf[] = new byte[1024];
            int len;
            while ((len = inputStream.read(buf)) &amp;gt; 0) {
                out.write(buf, 0, len);
            }
            out.close();
            inputStream.close();
            return f;
        }

    So in this code, I am reading a file in the test resources folder as a InputStream, writing the stream to a file in a unique directory in my OS&amp;#39;s temp directory and finally processing the file.

    Now, the other task I am trying to do is converting a SpreadsheetML file to a binary Excel file. SpreadsheetML is MS Office Excel 2003 format for storing Excel files in XML format. For this I am using the &amp;lt;a href=&amp;quot;http://danadler.com/jacob/&amp;quot; target=&amp;quot;_blank&amp;quot;&amp;gt;Jacob COM library&amp;lt;/a&amp;gt;. 

    @Override
        public boolean doConversionTask() {
            boolean success = true;
            try {
                ActiveXComponent excel = new ActiveXComponent(&amp;quot;Excel.Application&amp;quot;);
                Dispatch workbook = Dispatch.call(excel.getProperty(&amp;quot;Workbooks&amp;quot;).toDispatch(), &amp;quot;Open&amp;quot;, inFilePath).toDispatch();
                Dispatch.call(workbook, &amp;quot;SaveAs&amp;quot;, tempFilePath, 43);
                Dispatch.call(excel.getProperty(&amp;quot;Workbooks&amp;quot;).toDispatch(), &amp;quot;Close&amp;quot;);
            } catch (Exception e) {
                log.error(&amp;quot;Error in converting HTML to Excel : &amp;quot; + e.getMessage());
                success =  false;
            } finally {
                 excel.invoke(&amp;quot;Quit&amp;quot;, new Variant[]{});
                 ComThread.Release();
            }
            return success;
        }

    Hopefully this will help someone out there.&lt;/code&gt;&lt;/pre&gt;</content>
  </entry>
  <entry>
    <title>Installing Oracle on Linux (Ubuntu / Fedora)</title>
    <link rel="http://rockyj.in" href="/2011/06/25/2011-06-25-working-with-oracle-on-linux-ubuntu-fedora.html"/>
    <id>http://rockyj.in/2011/06/25/2011-06-25-working-with-oracle-on-linux-ubuntu-fedora.html</id>
    <published>2011-06-25T00:00:00+05:30</published>
    <updated>2011-06-25T00:00:00+05:30</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;pre&gt;&lt;code&gt;Oracle DB is a weird animal. One might think that it being one of the most used databases in the world (read enterprise), it might be easy to install. But every time I try to install it I end up pulling my hair. So this blog is for my own help, future reference and for fellow humans who want their software installations to be simple.


START RANT -- The first thing that hits you in Oracle is the schema. What the hell is a schema? Coming from MySQL and Postgres one knows databases and users but Oracle adds another layer which is the &amp;quot;Schema&amp;quot;. It took me a while to figure that a schema is a logical grouping of database objects inside a database. Oracle database conventions refer to defined groups of object ownership (generally associated with a &amp;quot;username&amp;quot;) as schemas. This makes it possible to have several tables with the same name in the same database. So a table is in a schema which in turn is in a database. --END RANT&lt;/code&gt;&lt;/pre&gt;</summary>
    <content type="html">&lt;pre&gt;&lt;code&gt;Oracle DB is a weird animal. One might think that it being one of the most used databases in the world (read enterprise), it might be easy to install. But every time I try to install it I end up pulling my hair. So this blog is for my own help, future reference and for fellow humans who want their software installations to be simple.


START RANT -- The first thing that hits you in Oracle is the schema. What the hell is a schema? Coming from MySQL and Postgres one knows databases and users but Oracle adds another layer which is the &amp;quot;Schema&amp;quot;. It took me a while to figure that a schema is a logical grouping of database objects inside a database. Oracle database conventions refer to defined groups of object ownership (generally associated with a &amp;quot;username&amp;quot;) as schemas. This makes it possible to have several tables with the same name in the same database. So a table is in a schema which in turn is in a database. --END RANT

Anyways, coming back to the installation. If you like me are a open source / free software junkie and you want to download free, legitimate software from the internet, head to Oracle site and download the Oracle Xpress Edition server (please note that you do not want to download the client as it may or may not work depending on the temperature, room humidity etc.) Also if you are a windows guy most of the steps are the same but in case you have Virtualbox also on your system, prepare for all hell to break loose (you have been warned!).

Oracle XE download page - &amp;lt;a href=&amp;quot;http://www.oracle.com/technetwork/database/express-edition/downloads/index.html&amp;quot; target=&amp;quot;_blank&amp;quot;&amp;gt;http://www.oracle.com/technetwork/database/express-edition/downloads/index.html&amp;lt;/a&amp;gt;

Download the Universal Edition (it is safer), please choose the file as per your package manager.

Before you gleefully double click the .deb or .rpm file make sure you have atleast 1 GB of swap or the installation won&amp;#39;t work. I would even go on to make sure that you have 2 GB of swap.

After you ensure that you have enough swap space, install the .deb or .rpm file.

After the installation, do a - &amp;lt;strong&amp;gt;sudo /etc/init.d/oracle-xe configure&amp;lt;/strong&amp;gt;

This will ask you for a few options, you can stick with the defaults if you want. I recommend you change the web application (that provides a DB management interface) port to 8081 as 8080 is usually used by your local Tomcat server.

Now set a environment variable as - &amp;lt;strong&amp;gt;export ORACLE_HOME=&amp;quot;/usr/lib/oracle/xe/app/oracle/product/10.2.0/server&amp;quot;&amp;lt;/strong&amp;gt;

Now you have Oracle XE server running on your system, what more you get the Oracle client also for free.

Now for a nice SQL editor you might wanna use &amp;lt;a href=&amp;quot;http://www.oracle.com/technetwork/developer-tools/sql-developer/overview/index.html&amp;quot;&amp;gt;SQL developer&amp;lt;/a&amp;gt;. It&amp;#39;s from Oracle only and works reasonably well.

Finally, you can use JDBC setting for setting up connection with your database/s or you can edit the infamous tnsnames.ora files in - 
&amp;lt;strong&amp;gt;/usr/lib/oracle/xe/app/oracle/product/10.2.0/server/network/admin/tnsnames.ora&amp;lt;/strong&amp;gt;

SQL Developer will automatically pick up entries in the tnsnames.ora file and will generally work faster with this setting rather than a plain jdbc connection.

Thats it! Go crazy with your new Oracle Server and Client.&lt;/code&gt;&lt;/pre&gt;</content>
  </entry>
  <entry>
    <title>Putting CouchDB and Rails on the Cloud</title>
    <link rel="http://rockyj.in" href="/2011/06/06/2011-06-06-putting-couchdb-and-rails-on-the-cloud.html"/>
    <id>http://rockyj.in/2011/06/06/2011-06-06-putting-couchdb-and-rails-on-the-cloud.html</id>
    <published>2011-06-06T00:00:00+05:30</published>
    <updated>2011-06-06T00:00:00+05:30</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;pre&gt;&lt;code&gt;&amp;lt;div style=&amp;quot;width:425px&amp;quot; id=&amp;quot;__ss_8220075&amp;quot;&amp;gt; &amp;lt;strong style=&amp;quot;display:block;margin:12px 0 4px&amp;quot;&amp;gt;&amp;lt;a href=&amp;quot;http://www.slideshare.net/rockyjaiswal/couchdb-and-rails-on-the-cloud-8220075&amp;quot; title=&amp;quot;CouchDB and Rails on the Cloud&amp;quot;&amp;gt;CouchDB and Rails on the Cloud&amp;lt;/a&amp;gt;&amp;lt;/strong&amp;gt; &amp;lt;iframe src=&amp;quot;http://www.slideshare.net/slideshow/embed_code/8220075&amp;quot; width=&amp;quot;425&amp;quot; height=&amp;quot;355&amp;quot; frameborder=&amp;quot;0&amp;quot; marginwidth=&amp;quot;0&amp;quot; marginheight=&amp;quot;0&amp;quot; scrolling=&amp;quot;no&amp;quot;&amp;gt;&amp;lt;/iframe&amp;gt; &amp;lt;div style=&amp;quot;padding:5px 0 12px&amp;quot;&amp;gt; View more &amp;lt;a href=&amp;quot;http://www.slideshare.net/&amp;quot;&amp;gt;presentations&amp;lt;/a&amp;gt; from &amp;lt;a href=&amp;quot;http://www.slideshare.net/rockyjaiswal&amp;quot;&amp;gt;rockyjaiswal&amp;lt;/a&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/pre&gt;</summary>
    <content type="html">&lt;pre&gt;&lt;code&gt;&amp;lt;div style=&amp;quot;width:425px&amp;quot; id=&amp;quot;__ss_8220075&amp;quot;&amp;gt; &amp;lt;strong style=&amp;quot;display:block;margin:12px 0 4px&amp;quot;&amp;gt;&amp;lt;a href=&amp;quot;http://www.slideshare.net/rockyjaiswal/couchdb-and-rails-on-the-cloud-8220075&amp;quot; title=&amp;quot;CouchDB and Rails on the Cloud&amp;quot;&amp;gt;CouchDB and Rails on the Cloud&amp;lt;/a&amp;gt;&amp;lt;/strong&amp;gt; &amp;lt;iframe src=&amp;quot;http://www.slideshare.net/slideshow/embed_code/8220075&amp;quot; width=&amp;quot;425&amp;quot; height=&amp;quot;355&amp;quot; frameborder=&amp;quot;0&amp;quot; marginwidth=&amp;quot;0&amp;quot; marginheight=&amp;quot;0&amp;quot; scrolling=&amp;quot;no&amp;quot;&amp;gt;&amp;lt;/iframe&amp;gt; &amp;lt;div style=&amp;quot;padding:5px 0 12px&amp;quot;&amp;gt; View more &amp;lt;a href=&amp;quot;http://www.slideshare.net/&amp;quot;&amp;gt;presentations&amp;lt;/a&amp;gt; from &amp;lt;a href=&amp;quot;http://www.slideshare.net/rockyjaiswal&amp;quot;&amp;gt;rockyjaiswal&amp;lt;/a&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/pre&gt;</content>
  </entry>
  <entry>
    <title>Integrating Google Re-Captcha with a Rails app</title>
    <link rel="http://rockyj.in" href="/2011/05/16/integrating-google-re-captcha-with-a-rails-app.html"/>
    <id>http://rockyj.in/2011/05/16/integrating-google-re-captcha-with-a-rails-app.html</id>
    <published>2011-05-16T00:00:00+05:30</published>
    <updated>2011-05-16T00:00:00+05:30</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;p&gt;So you want to use re-captcha in your Rails application to avoid bots spamming your site, look no further -&lt;/p&gt;

&lt;p&gt;In your Rails 3 gem file add the &lt;strong&gt;gem &amp;#8220;scaffoldhub&amp;#8221;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Do a - &lt;strong&gt;bundle install&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Lets say you want to create a comment page with re-captcha so that you save on spam -&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;rails generate scaffoldhub comment name:string email:string comment_text:text &amp;#8211;scaffold comments_captcha&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You will get the model, controller and view generated for creating a re-captcha secured comment.&lt;/p&gt;

&lt;p&gt;Finally to make the re-captcha work, you need to do these steps -&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;So you want to use re-captcha in your Rails application to avoid bots spamming your site, look no further -&lt;/p&gt;

&lt;p&gt;In your Rails 3 gem file add the &lt;strong&gt;gem &amp;#8220;scaffoldhub&amp;#8221;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Do a - &lt;strong&gt;bundle install&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Lets say you want to create a comment page with re-captcha so that you save on spam -&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;rails generate scaffoldhub comment name:string email:string comment_text:text &amp;#8211;scaffold comments_captcha&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You will get the model, controller and view generated for creating a re-captcha secured comment.&lt;/p&gt;

&lt;p&gt;Finally to make the re-captcha work, you need to do these steps -&lt;/p&gt;

&lt;p&gt;Add &lt;strong&gt;include ReCaptcha::AppHelper&lt;/strong&gt; in your ApplicationController before the line before protect_from_forgery.&lt;/p&gt;

&lt;p&gt;Add &lt;strong&gt;include ReCaptcha::ViewHelper&lt;/strong&gt; in your ApplicationHelper.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sign up to http://www.google.com/recaptcha and get you re-captcha keys.&lt;/strong&gt; Add them in config/environment.rb -&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;RCC_PUB=&amp;#8217;abc_your_key&amp;#8217;&lt;/strong&gt;# Please use keys for your own domain &lt;strong&gt;RCC_PRIV=&amp;#8217;xyz_your_key&amp;#8217;&lt;/strong&gt;# Please use keys for your own domain&lt;/p&gt;

&lt;p&gt;Remember to do a db:migrate and restart your server (as we changed environment.rb). Your re-captcha is configured and ready to use!&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>The real purpose of a Sprint Goal</title>
    <link rel="http://rockyj.in" href="/2011/05/03/2011-05-03-the-real-purpose-of-a-sprint-goal.html"/>
    <id>http://rockyj.in/2011/05/03/2011-05-03-the-real-purpose-of-a-sprint-goal.html</id>
    <published>2011-05-03T00:00:00+05:30</published>
    <updated>2011-05-03T00:00:00+05:30</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;pre&gt;&lt;code&gt;    The folks who thought of Scrum were really smart guys. I don&amp;#39;t say this because Scrum has worked for me but I say this because the more I think of Scrum, the more I appreciate it. For example, why does a Sprint need to gave a goal? Is it just because we want to divide the project into chunks and if each sprint or chunk of work is successfully executed we assume that we are on the right track? Or there is more than what meets the eye?

    For me a sprint goal is not just an indication that the team is going in the right direction, it also caters to a great desire in me and in most developers - that is to get the feeling that you delivered something well and it calls for recognition and celebration.&lt;/code&gt;&lt;/pre&gt;</summary>
    <content type="html">&lt;pre&gt;&lt;code&gt;    The folks who thought of Scrum were really smart guys. I don&amp;#39;t say this because Scrum has worked for me but I say this because the more I think of Scrum, the more I appreciate it. For example, why does a Sprint need to gave a goal? Is it just because we want to divide the project into chunks and if each sprint or chunk of work is successfully executed we assume that we are on the right track? Or there is more than what meets the eye?

    For me a sprint goal is not just an indication that the team is going in the right direction, it also caters to a great desire in me and in most developers - that is to get the feeling that you delivered something well and it calls for recognition and celebration.


    If I analyze this more, we as humans are driven by purpose. Plus it gives us great satisfaction when our purpose is achieved and we are recognized by our peers. In waterfall, this moment came once in the life of a project (that too it was rare) when the project was successfully deployed to production. The Scrum guys, smart as they were, wanted to give us more opportunities to celebrate and pat ourselves on the back.

    In essence, what I am saying is that it is a great feeling (generally) to plan for something and achieve it, be it a simple thing to reach a supermarket at a pre-determined time. Scrum wants to give us the same feeling. But I see we sometimes let go of this feeling because we miss a few essentials. So what are these essentials and how do we not miss them ?

    Few suggestions that I can think of -

    p.s. This is one of my gripes with Kanban as it never gives me this happy feeling so I never recommend it.&lt;/code&gt;&lt;/pre&gt;</content>
  </entry>
  <entry>
    <title>Views from across the table</title>
    <link rel="http://rockyj.in" href="/2011/05/02/2011-05-02-views-from-across-the-table.html"/>
    <id>http://rockyj.in/2011/05/02/2011-05-02-views-from-across-the-table.html</id>
    <published>2011-05-02T00:00:00+05:30</published>
    <updated>2011-05-02T00:00:00+05:30</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;p&gt;A few weeks back, I had the unique opportunity to visit my old employer, this time however as a customer. It was good to hear some old terms which I last heard when I worked there. It also got me thinking that, throughout my career I worked as a software developer who developed software for other clients and now here I was looking at a bunch of inquisitive developers asking me questions.&lt;/p&gt;

&lt;p&gt;The tables had turned, from a service provider + &#160;developer, I had now turned into a customer + developer. This unique experience also made me think, what can I learn from it. If I am the customer, what do I look for in my consultants. Or&#160;conversely&#160;how could I have be a better consultant + developer based on my new found position.&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;A few weeks back, I had the unique opportunity to visit my old employer, this time however as a customer. It was good to hear some old terms which I last heard when I worked there. It also got me thinking that, throughout my career I worked as a software developer who developed software for other clients and now here I was looking at a bunch of inquisitive developers asking me questions.&lt;/p&gt;

&lt;p&gt;The tables had turned, from a service provider + &#160;developer, I had now turned into a customer + developer. This unique experience also made me think, what can I learn from it. If I am the customer, what do I look for in my consultants. Or&#160;conversely&#160;how could I have be a better consultant + developer based on my new found position.&lt;/p&gt;

&lt;p&gt;So here goes, these are the qualities I believe every customer would appreciate -&lt;/p&gt;
&lt;strong&gt;Have no fear -&lt;/strong&gt;
&lt;p&gt;No&#160;customer&#160;would&#160;appreciate&#160;that the developer on the other side never expresses his opinion or always agrees to what he says. This makes the customer feel that the team is not thinking on its own and his decisions can make or break the project. I myself have been&#160;guilty&#160;of this, I just sat through a whole lot of meetings just listening and never expressing my opinion as I thought &amp;#8220;Who would care about what I say, I&amp;#8217;ll just do it the way they tell me to&amp;#8221;. Or &amp;#8220;I am way too junior to express my opinions, better shut up and listen&amp;#8221;. However, when you are on the other side of the table you want all sorts of inputs / validations / questions to see if you are going in the right direction.&lt;/p&gt;
&lt;strong&gt;Express your opinion -&lt;/strong&gt;
&lt;p&gt;Kind of extension to the point above. Any customer would want to hear to how a developer plans to achieve a solution. There may be a obvious solution but if some alternate ways exist it is best to discuss them. If your opinion is not in line with the customer, still go ahead and express it. It would be a huge relief instead of anything else to the customer as he/she will understand that this team is thinking about this project and wants to do it in a best possible manner as per their knowledge. If differences exist between the two parties, they can be mutually resolved through discussion and analysis.&lt;/p&gt;
&lt;strong&gt;Communicate clearly and precisely -&lt;/strong&gt;
&lt;p&gt;This is a cliche and every developer is told to do this. Yet, it is&#160;surprising that so few of us actually practice it. When I was over the phone and the customer asked a question, me and my team would sometimes nod as that&amp;#8217;s what Indians do but surprise surprise the customer could not see the&#160;vigorous&#160;&#160;shake of heads over the phone. Another example is when a customer asks a question, we the developers first tried to whisper a solution among ourselves and before speaking it over the phone but when you are on the other side of the phone you wonder if anyone even listened to your question. Personally I am trying to implement an idea to speak over the phone&#160;whatever I am doing like - I am clicking on the link right now&amp;#8221; or &amp;#8220;I am thinking about a possible solution&amp;#8221;. Remember keep the&#160;customer&#160;engaged and informed.&lt;/p&gt;
&lt;strong&gt;Build trust -&lt;/strong&gt;
&lt;p&gt;This is one of the most&#160;important&#160;things. In fact, most people will say that this is the most important thing between a customer and a consultant. But how do you build trust specially in a new&#160;engagement. &#160;The only way to do this according to me is to showcase progress regularly, give and get frequent feedback and share your status at the start of the day and at its end. This is where Agile can help, with sprints, daily standups and sprint review you have all the necessary tools available with you. Feel free to talk more and more in the first few weeks of an engagement just to let the customer know that you are working and the project is constantly on your mind.&lt;/p&gt;

&lt;p&gt;Well here I am with all the points I could think of. Developing software in India is unique in its own way, the customer is usually in US or Europe, you only meet the customer once or twice a year and then everyday there is this huge time difference. We also have a lot more service providers than product development companies. So if you are working in a service provider setup then apart from developing great software you will also have to take a lot of other things into consideration and sometimes these small things can be a difference between a sad project and a great project.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Thoughts of the week 24 - 30 April</title>
    <link rel="http://rockyj.in" href="/2011/05/02/2011-05-02-thoughts-of-the-week-24-30-april.html"/>
    <id>http://rockyj.in/2011/05/02/2011-05-02-thoughts-of-the-week-24-30-april.html</id>
    <published>2011-05-02T00:00:00+05:30</published>
    <updated>2011-05-02T00:00:00+05:30</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;p&gt;Busy busy last week. But still got a lot of time to think on my way back home. &lt;li&gt;Only two things that you should aim for - happy teams and delighted customers. Choose any process that gives you these. Why I favor Agile? Because I have seen it deliver these two things time and time again.&lt;/li&gt; &lt;li&gt;The dictionary meaning of estimate - es&#183;ti&#183;mate/-mit/ -&#160;Noun: An approximate calculation or judgment of the value, number, quantity, or extent of something. Wonder when the IT industry turned&#160;estimates to contracts??&lt;/li&gt;&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;Busy busy last week. But still got a lot of time to think on my way back home. &lt;li&gt;Only two things that you should aim for - happy teams and delighted customers. Choose any process that gives you these. Why I favor Agile? Because I have seen it deliver these two things time and time again.&lt;/li&gt; &lt;li&gt;The dictionary meaning of estimate - es&#183;ti&#183;mate/-mit/ -&#160;Noun: An approximate calculation or judgment of the value, number, quantity, or extent of something. Wonder when the IT industry turned&#160;estimates to contracts??&lt;/li&gt; &lt;li&gt;If I were to hire me, what would I pay myself? Crazy thought.&lt;/li&gt; &lt;li&gt;Need to read this daily - &lt;a href='http://mmiika.wordpress.com/oo-design-principles/' title='http://mmiika.wordpress.com/oo-design-principles/'&gt;http://mmiika.wordpress.com/oo-design-principles/&lt;/a&gt;&lt;/li&gt; &lt;li&gt;The organization hired you for a reason. So while being flexible, one should not change his/her principles to fit in the organization.&#160;Because what makes you special is your uniqueness :).&lt;/li&gt; &lt;li&gt;Practical never changed the world (oldie but a goldie).&lt;/li&gt; &lt;li&gt;It takes a lot of effort to keep things simple. Making complex solutions is way too easy.&lt;/li&gt; &lt;li&gt;Joke between Indian developers - Developer 1 : "You know, I went to XYZ country and the office was empty by 6 PM". Everyone else laughs their socks off. I don't know whether to smile or frown.&lt;/li&gt; &lt;li&gt;I think I have have turned a corner. I now think what is the minimum amount of money I need, I plan to have no mortgage/home loan, pay off my&#160;car loan and see what is the minimum salary I can get by. Then I can concentrate on other important things.&lt;/li&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Be Happy to Fail</title>
    <link rel="http://rockyj.in" href="/2011/04/20/2011-04-20-be-happy-to-fail.html"/>
    <id>http://rockyj.in/2011/04/20/2011-04-20-be-happy-to-fail.html</id>
    <published>2011-04-20T00:00:00+05:30</published>
    <updated>2011-04-20T00:00:00+05:30</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;p&gt;Be Happy to Fail - a statement that sounds like heresy and may ruffle a few feathers. But in Agile, we say this is good.&lt;/p&gt;

&lt;p&gt;The question then comes is why Agile preaches such&#160;contrarian thoughts. People pay good money to developers and they should always be motivated to make each sprint successful.&lt;/p&gt;

&lt;p&gt;Let me start by giving an example - A team is under high pressure to make each sprint demo successful. Two days before the demo they realize that a lot of work needs to be done. Since, failing the demo is not an option, the team works late nights and gets the job done. The demo is then successful and the management applauds the team and since they met the Sprint Goals everyone picks up the same amount of work again coz hey the velocity is good and they did all the work. So in the next sprint the same thing happens all over again and the team works overtime. Over a period of 2 months the team is exhausted, they think the project is a burden and Agile sucks and its just another tool for the management to add pressure on to them and a few team members plan to leave, the rest are just happy coding so that the demo is successful. The code quality and motivation goes down the hill from here.&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;Be Happy to Fail - a statement that sounds like heresy and may ruffle a few feathers. But in Agile, we say this is good.&lt;/p&gt;

&lt;p&gt;The question then comes is why Agile preaches such&#160;contrarian thoughts. People pay good money to developers and they should always be motivated to make each sprint successful.&lt;/p&gt;

&lt;p&gt;Let me start by giving an example - A team is under high pressure to make each sprint demo successful. Two days before the demo they realize that a lot of work needs to be done. Since, failing the demo is not an option, the team works late nights and gets the job done. The demo is then successful and the management applauds the team and since they met the Sprint Goals everyone picks up the same amount of work again coz hey the velocity is good and they did all the work. So in the next sprint the same thing happens all over again and the team works overtime. Over a period of 2 months the team is exhausted, they think the project is a burden and Agile sucks and its just another tool for the management to add pressure on to them and a few team members plan to leave, the rest are just happy coding so that the demo is successful. The code quality and motivation goes down the hill from here.&lt;/p&gt;

&lt;p&gt;This is exactly the situation we should try and avoid. The Scrum Master in the team above should have said - No problem guys, if we cannot finish the work before the demo, so be it. We tried our best and we&amp;#8217;ll adjust our velocity from now on. Simple. One demo fails but the next demo is successful and most importantly the team is happy.&lt;/p&gt;

&lt;p&gt;On of the main things I say is - Happy teams are performing teams. When I delivered my last project as a Scrum Master before time and within budget, my customer said how did you do it. I just said I had a great team and I all I did was to keep them happy (which of course included pushing them out of office after 8 hrs of work).&lt;/p&gt;

&lt;p&gt;I think these are the finer difference between Following Agile and Being Agile. A lot of times we associate ceremony around Agile, have this meeting and that and oh! oh! the demo should never fail. All I say is relax! The demo is not the end of the world. Just keep giving it your best, work&#160;happily&#160;and the rest will take care of itself.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Using RVM on Ubuntu to install (multiple versions of) Ruby</title>
    <link rel="http://rockyj.in" href="/2011/04/14/2011-04-14-using-rvm-on-ubuntu-to-install-multiple-versions-of-ruby.html"/>
    <id>http://rockyj.in/2011/04/14/2011-04-14-using-rvm-on-ubuntu-to-install-multiple-versions-of-ruby.html</id>
    <published>2011-04-14T00:00:00+05:30</published>
    <updated>2011-04-14T00:00:00+05:30</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;pre&gt;&lt;code&gt;Recently I got a new laptop and as usual I installed Ubuntu on it, although for the last year or so I was using &amp;lt;a href=&amp;quot;http://www.pclinuxos.com/&amp;quot; target=&amp;quot;_blank&amp;quot;&amp;gt;PCLinuxOS&amp;lt;/a&amp;gt; it felt good to go back to an old friend. The first job at hand was to install Ruby on it.

I wanted to install Ruby 1.9.2 since it is the latest and recommended version. However in Synaptic I could only find Ruby 1.8.7 (very stable) and Ruby 1.9.1 (not recommended). Then I read about RVM (Ruby Version Manager) and thought I would give it a spin.&lt;/code&gt;&lt;/pre&gt;</summary>
    <content type="html">&lt;pre&gt;&lt;code&gt;Recently I got a new laptop and as usual I installed Ubuntu on it, although for the last year or so I was using &amp;lt;a href=&amp;quot;http://www.pclinuxos.com/&amp;quot; target=&amp;quot;_blank&amp;quot;&amp;gt;PCLinuxOS&amp;lt;/a&amp;gt; it felt good to go back to an old friend. The first job at hand was to install Ruby on it.

I wanted to install Ruby 1.9.2 since it is the latest and recommended version. However in Synaptic I could only find Ruby 1.8.7 (very stable) and Ruby 1.9.1 (not recommended). Then I read about RVM (Ruby Version Manager) and thought I would give it a spin.
&amp;lt;!--more--&amp;gt;

To install RVM you first need Git, as RVM downloads the source code from Github and builds from there. So head over to Synaptic and install Git.

Before you install RVM (and I learned this from after a lot of tries) also install some other packages -

&amp;lt;strong&amp;gt;sudo apt-get install curl gcc g++ build-essential libssl-dev libreadline5-dev zlib1g-dev linux-headers-generic libsqlite3-dev&amp;lt;/strong&amp;gt;

If you do not do this you can still install RVM but if you try and run IRB it complains about Readline and some other stuff.

Next, as given in RVM&amp;#39;s &amp;lt;a href=&amp;quot;https://rvm.beginrescueend.com/&amp;quot; target=&amp;quot;_blank&amp;quot;&amp;gt;website&amp;lt;/a&amp;gt; run -

&amp;lt;strong&amp;gt;$ bash &amp;amp;lt; &amp;amp;lt;(curl -s https://rvm.beginrescueend.com/install/rvm)&amp;lt;/strong&amp;gt;

This will download and compile RVM and may take a few minutes.

Once RVM is installed, run -

&amp;lt;strong&amp;gt;. &amp;quot;$HOME/.rvm/scripts/rvm&amp;quot;&amp;lt;/strong&amp;gt;

This will &amp;quot;Source&amp;quot; the RVM script and load the rvm command as a function.

Now simply run -

&amp;lt;strong&amp;gt;rvm install 1.9.2&amp;lt;/strong&amp;gt;

This will install 1.9.2 version of Ruby.

You can also install another version by simply typing -

&amp;lt;strong&amp;gt;rvm install 1.8.7&amp;lt;/strong&amp;gt;

And once you are done, just say -

&amp;lt;strong&amp;gt;rvm use 1.9.2&amp;lt;/strong&amp;gt;
or
&amp;lt;strong&amp;gt;rvm use 1.8.7&amp;lt;/strong&amp;gt;

And accordingly the Ruby environment will be loaded. You can check the version by just typing

&amp;lt;strong&amp;gt;ruby -v&amp;lt;/strong&amp;gt;

To make a Ruby version default (will save you the use command) run

&amp;lt;strong&amp;gt;rvm --default use 1.9.2&amp;lt;/strong&amp;gt; # This is a double hyphen/dash

With this whenever you source the rvm script, Ruby 1.9.2 will be loaded automatically.

Last step is sourcing the rvm script (. &amp;quot;$HOME/.rvm/scripts/rvm&amp;quot;) automatically every time you log in. Ideally you should be able to put this in your bash_login script but I tried that and it didn&amp;#39;t work. Anyone who has met success with this can comment on this post, it would a great help. Otherwise you just have to make a habit of running &amp;lt;strong&amp;gt;. &amp;quot;$HOME/.rvm/scripts/rvm&amp;quot;&amp;lt;/strong&amp;gt; before you want to use Ruby.

To install the latest version of Rails or some other gems you would first need to update your gem system, you can do this by typing -

&amp;lt;strong&amp;gt;gem update --system&amp;lt;/strong&amp;gt;# This is a double hyphen/dash

Now you are good to go crazy with Ruby on your new system!&lt;/code&gt;&lt;/pre&gt;</content>
  </entry>
  <entry>
    <title>Thoughts of the week (4 - 10 April)</title>
    <link rel="http://rockyj.in" href="/2011/04/11/2011-04-11-thoughts-of-the-week-4-10-april.html"/>
    <id>http://rockyj.in/2011/04/11/2011-04-11-thoughts-of-the-week-4-10-april.html</id>
    <published>2011-04-11T00:00:00+05:30</published>
    <updated>2011-04-11T00:00:00+05:30</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;pre&gt;&lt;code&gt;&amp;lt;ul&amp;gt;
	&amp;lt;li&amp;gt;If you can demo it, but the PO or Users cannot use it, it is not &amp;quot;Done&amp;quot;.&amp;lt;/li&amp;gt;
	&amp;lt;li&amp;gt;Education in India is mostly seen as a ticket to a better life. Check all the right boxes and you just may get a better life. That is why there is lot of compliance but hardly any innovation.&amp;lt;/li&amp;gt;
	&amp;lt;li&amp;gt;Every time you commit your code. Ask yourself is it worth going out in the world? Is it worth putting against your name tag?&amp;lt;/li&amp;gt;
	&amp;lt;li&amp;gt;Bad code even if it is tested is technical debt because it will hurt you one day or another.&amp;lt;/li&amp;gt;&lt;/code&gt;&lt;/pre&gt;</summary>
    <content type="html">&lt;pre&gt;&lt;code&gt;&amp;lt;ul&amp;gt;
	&amp;lt;li&amp;gt;If you can demo it, but the PO or Users cannot use it, it is not &amp;quot;Done&amp;quot;.&amp;lt;/li&amp;gt;
	&amp;lt;li&amp;gt;Education in India is mostly seen as a ticket to a better life. Check all the right boxes and you just may get a better life. That is why there is lot of compliance but hardly any innovation.&amp;lt;/li&amp;gt;
	&amp;lt;li&amp;gt;Every time you commit your code. Ask yourself is it worth going out in the world? Is it worth putting against your name tag?&amp;lt;/li&amp;gt;
	&amp;lt;li&amp;gt;Bad code even if it is tested is technical debt because it will hurt you one day or another.&amp;lt;/li&amp;gt;
	&amp;lt;li&amp;gt;If you feel that someone in your organization will be happy because of the work you did when close your laptop, it is the best feeling you can have.&amp;lt;/li&amp;gt;
	&amp;lt;li&amp;gt;What do you work for? Is it to please your boss, or just because you love what you do?&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;&lt;/code&gt;&lt;/pre&gt;</content>
  </entry>
  <entry>
    <title>MapReduce in English</title>
    <link rel="http://rockyj.in" href="/2011/04/08/2011-04-08-mapreduce-in-english.html"/>
    <id>http://rockyj.in/2011/04/08/2011-04-08-mapreduce-in-english.html</id>
    <published>2011-04-08T00:00:00+05:30</published>
    <updated>2011-04-08T00:00:00+05:30</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;pre&gt;&lt;code&gt;It took me a lot of time to understand MapReduce, I read the definition from Google, then I read the explanation in &amp;quot;CouchDB : The Definitive Guide&amp;quot; and finally I read the &amp;lt;a href=&amp;quot;http://en.wikipedia.org/wiki/MapReduce&amp;quot; target=&amp;quot;_blank&amp;quot;&amp;gt;Wikipedia&amp;lt;/a&amp;gt; entry. I found the Wikipedia entry to be the most useful and simple to understand. So before I myself forget what I have understood, I want to blurt it out in this blog. 

To understand what is MapReduce one must first think (like with most technology) why one needs MapReduce. The answer is simply to distribute work. Now work can be distributed to a cluster of workstations or even the cores of a single CPU but the idea behind the MapReduce algo is to &amp;quot;Divide and Rule&amp;quot;.&lt;/code&gt;&lt;/pre&gt;</summary>
    <content type="html">&lt;pre&gt;&lt;code&gt;It took me a lot of time to understand MapReduce, I read the definition from Google, then I read the explanation in &amp;quot;CouchDB : The Definitive Guide&amp;quot; and finally I read the &amp;lt;a href=&amp;quot;http://en.wikipedia.org/wiki/MapReduce&amp;quot; target=&amp;quot;_blank&amp;quot;&amp;gt;Wikipedia&amp;lt;/a&amp;gt; entry. I found the Wikipedia entry to be the most useful and simple to understand. So before I myself forget what I have understood, I want to blurt it out in this blog. 

To understand what is MapReduce one must first think (like with most technology) why one needs MapReduce. The answer is simply to distribute work. Now work can be distributed to a cluster of workstations or even the cores of a single CPU but the idea behind the MapReduce algo is to &amp;quot;Divide and Rule&amp;quot;.

&amp;lt;!--more--&amp;gt;

The quintessential example given to explain MapReduce is how you would count the number of occurrence of each word in a document (or a set of documents). I will use the same example but twist it just a little bit, so I say, if I give you a book and &amp;quot;N&amp;quot; number of assistants, how would you count the occurrences of each word in the book?

Most likely answer is, that you would tear the book and hand over some pages to each of your assistants asking them to count the word occurrences in their respective pages. 

In computing we will do this is two steps, first we will need a function (somethings which the assistants do) that takes in a document (be it 1 page or 10 pages or 1 paragraph in our example) and once a word is found it simply flags count to one. 

Next, me the master would then take all the words and their flags (just like a Map) and sort them on the keys i.e. the words themselves. So we have something like -

a : 1
a : 1
a : 1
a : 1
Once : 1
Once : 1
the : 1
the : 1
the : 1
...
So on and so forth. 

The Map function is therefore designed in such a way that it is distributable and all the workers are doing the same thing. Now comes the Reduce function, again whatever it does has to be distributable and uniform. So in my example I would give each for my assistants a word (lets say &amp;quot;Once&amp;quot; in example above) or a set of words along with a list of its count ([1, 1] for &amp;quot;Once&amp;quot;). The Reduce function can then simply add the count for each word and give me back the result which is exactly what I need (the number of occurrences of each word).

If it is still confusing, let me revisit my example. I tear the book and give pages to each of my assistants who simply give me back a Map of each word they read with a count of 1. I then sort the words (simple if I am a computer) and then give the workers back a set of words with their associated occurrences (a list just saying [1, 1, 1, ..]). The workers then for each word sum the elements of the list and hand me back the result.

In essence, MapReduce enables us to break down very complex problems into smaller parts and helps us bring down the computation time dramatically. I my example above I have simplified things to a great extent to make it understandable but technically a lot more may be going on. For example, one of my assistants can become a sub-master and sub-divide the work to other assistants and sort the maps himself. 

MapReduce is very powerful and with the advent of multi-core processors and cheap hardware it just might be a non-negotiable skill in every developer&amp;#39;s arsenal. Google used it to completely regenerate Google&amp;#39;s index of the World Wide Web. Need I say more :).&lt;/code&gt;&lt;/pre&gt;</content>
  </entry>
  <entry>
    <title>Java and Ruby integration via SOAP</title>
    <link rel="http://rockyj.in" href="/2011/04/01/2011-04-01-java-and-ruby-integration-via-soap.html"/>
    <id>http://rockyj.in/2011/04/01/2011-04-01-java-and-ruby-integration-via-soap.html</id>
    <published>2011-04-01T00:00:00+05:30</published>
    <updated>2011-04-01T00:00:00+05:30</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;pre&gt;&lt;code&gt;In my last blog we talked about Ruby and Java integration via JRuby. Since JRuby runs on JVM, bytecode can be shared but in case you do not want a JVM level integration then SOAP is usually your next level of support.

Imagine a scenario where you want to call a SOAP server written in Java from Ruby, this is quite common as most enterprises have their middleware written in Java and new application can be written quickly in Ruby/Rails. Here is how you can go about integrating the two -&lt;/code&gt;&lt;/pre&gt;</summary>
    <content type="html">&lt;pre&gt;&lt;code&gt;In my last blog we talked about Ruby and Java integration via JRuby. Since JRuby runs on JVM, bytecode can be shared but in case you do not want a JVM level integration then SOAP is usually your next level of support.

Imagine a scenario where you want to call a SOAP server written in Java from Ruby, this is quite common as most enterprises have their middleware written in Java and new application can be written quickly in Ruby/Rails. Here is how you can go about integrating the two -

&amp;lt;!--more--&amp;gt;
&amp;lt;span style=&amp;quot;color: #0000ff;&amp;quot;&amp;gt;&amp;lt;strong&amp;gt;The Java Server&amp;lt;/strong&amp;gt;&amp;lt;/span&amp;gt;

I am not going to cover this in detail here but for new deployments Apache CXF is quite popular. You can integrate it with Spring as given &amp;lt;a href=&amp;quot;https://cwiki.apache.org/CXF20DOC/writing-a-service-with-spring.html&amp;quot;&amp;gt;here&amp;lt;/a&amp;gt;. The Maven dependencies are as follows -

    &amp;lt;properties&amp;gt;
		&amp;lt;cxf.version&amp;gt;2.3.3&amp;lt;/cxf.version&amp;gt;
		&amp;lt;spring.version&amp;gt;3.0.4.RELEASE&amp;lt;/spring.version&amp;gt;
	&amp;lt;/properties&amp;gt;

	&amp;lt;dependencies&amp;gt;
		&amp;lt;!-- CXF dependencies --&amp;gt;
		&amp;lt;dependency&amp;gt;
			&amp;lt;groupId&amp;gt;org.apache.cxf&amp;lt;/groupId&amp;gt;
			&amp;lt;artifactId&amp;gt;cxf-rt-frontend-jaxws&amp;lt;/artifactId&amp;gt;
			&amp;lt;version&amp;gt;${cxf.version}&amp;lt;/version&amp;gt;
		&amp;lt;/dependency&amp;gt;
		&amp;lt;dependency&amp;gt;
			&amp;lt;groupId&amp;gt;org.apache.cxf&amp;lt;/groupId&amp;gt;
			&amp;lt;artifactId&amp;gt;cxf-rt-transports-http&amp;lt;/artifactId&amp;gt;
			&amp;lt;version&amp;gt;${cxf.version}&amp;lt;/version&amp;gt;
		&amp;lt;/dependency&amp;gt;
        &amp;lt;!-- End CXF dependencies --&amp;gt;

        &amp;lt;!-- Spring dependencies --&amp;gt;
        &amp;lt;!-- add other dependencies --&amp;gt;
	&amp;lt;/dependencies&amp;gt;

The Java code looks like -

@WebService
public interface EmployeeService {

	Employee findEmployeeByID(@WebParam(name = &amp;quot;employeeID&amp;quot;)long empID);
	boolean storeEmployee(@WebParam(name = &amp;quot;employee&amp;quot;)Employee emp);

}

And the Implementation looks like -

@Component(&amp;quot;employeeService&amp;quot;)
@WebService(endpointInterface = &amp;quot;in.mysoapserver.services.EmployeeService&amp;quot;)
public class EmployeeServiceImpl implements EmployeeService {

	@Override
	public Employee findEmployeeByID(long empID) {
		Employee employee = new Employee();
		employee.setEmpID(101);
		employee.setName(&amp;quot;Rocky&amp;quot;);
		employee.setAge(32);
		return employee;
	}

	@Override
	public boolean storeEmployee(Employee emp) {
		//Store Employee
		return true;
	}

}

After deploying the project in Tomcat you can get the WSDL from a link like - &amp;lt;strong&amp;gt;http://localhost:8080/mysoapserver/soap?wsdl&amp;lt;/strong&amp;gt;

Once you have the WSDL you should use SoapUI for some testing to check if the SOAP requests are working.

&amp;lt;span style=&amp;quot;color: #0000ff;&amp;quot;&amp;gt;&amp;lt;strong&amp;gt;The Ruby Client&amp;lt;/strong&amp;gt;&amp;lt;/span&amp;gt;
Now we are ready to create the SOAP client in Ruby. Please note the instructions below are same for Ruby or JRuby.

First install soap4r gem -
&amp;lt;strong&amp;gt;gem install soap4r&amp;lt;/strong&amp;gt;

Download (and unpack) the soap4r binary .tar.gz also from &amp;lt;a href=&amp;quot;http://dev.ctor.org/soap4r&amp;quot;&amp;gt;here&amp;lt;/a&amp;gt;

Now, just to organize things create a folder say &amp;quot;ruby_soap_client&amp;quot; and copy the WSDL of the SOAP services we created there.

Got to the folder where the WSDL is copied and run -
&amp;lt;strong&amp;gt;~/01rocky/02apps/soap4r-1.5.8/bin/wsdl2ruby.rb --type client --wsdl mysoapserver.wsdl&amp;lt;/strong&amp;gt;

* Change the path to wsdl2ruby.rb as per your setup.

This will create a set of Ruby scripts and also create an example client. Since we will make our own client you can safely delete the *Client.rb and *Driver.rb scripts.

Now let us create our own Ruby client -

require &amp;#39;soap/wsdlDriver&amp;#39;
require &amp;#39;EmployeeServiceImplService.rb&amp;#39;

wsdl = &amp;quot;mysoapserver.wsdl&amp;quot;

employee_service = SOAP::WSDLDriverFactory.new(wsdl).create_rpc_driver

response = employee_service.findEmployeeByID(FindEmployeeByID.new(10))
puts response.return.name
puts response.return.age

response = employee_service.storeEmployee(StoreEmployee.new(Employee.new(30,102,&amp;quot;Tushar&amp;quot;)))
puts response.return
[/ruby]

Lets examine each line in detail.
Line 1 - Just loading the required libraries for soap4r
Line 2 - The 3rd file that wsdl2ruby.rb script generated. We&amp;#39;ll look at it in a minute.
Line 4 - Just a variable for the wsdl file name. Change it according to your setup.
Line 6 - We create a SOAP RPC driver using the wsdl we saved earlier.
Line 8/12 - Next we make the SOAP call. But wait a minute, what is being passed as a parameter here?

The answer to this can be found if we look at the SOAP request we made from SoapUI -

[xml]
&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:ser=&amp;quot;http://services.mysoapserver.in/&amp;quot;&amp;gt;
   &amp;lt;soapenv:Header/&amp;gt;
   &amp;lt;soapenv:Body&amp;gt;
      &amp;lt;ser:findEmployeeByID&amp;gt;
         &amp;lt;employeeID&amp;gt;10&amp;lt;/employeeID&amp;gt;
      &amp;lt;/ser:findEmployeeByID&amp;gt;
   &amp;lt;/soapenv:Body&amp;gt;
&amp;lt;/soapenv:Envelope&amp;gt;
[/xml]

And for storeEmployee call -

[xml]
&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:ser=&amp;quot;http://services.mysoapserver.in/&amp;quot;&amp;gt;
   &amp;lt;soapenv:Header/&amp;gt;
   &amp;lt;soapenv:Body&amp;gt;
      &amp;lt;ser:storeEmployee&amp;gt;
         &amp;lt;employee&amp;gt;
            &amp;lt;age&amp;gt;30&amp;lt;/age&amp;gt;
            &amp;lt;empID&amp;gt;102&amp;lt;/empID&amp;gt;
            &amp;lt;name&amp;gt;Tushar&amp;lt;/name&amp;gt;
         &amp;lt;/employee&amp;gt;
      &amp;lt;/ser:storeEmployee&amp;gt;
   &amp;lt;/soapenv:Body&amp;gt;
&amp;lt;/soapenv:Envelope&amp;gt;
[/xml]

If we ignore the XML namespaces, our request is wrapped in a &amp;quot;findEmployeeByID&amp;quot; tag (for the findEmployeeByID call). Therefore, when we gave the wsdl2ruby.rb scpirt our WSDL reference, it created the equivalent Ruby classes for all wrappers, request and response types and stored it in a file which we referenced at Line 2.

So looking at the sample requests in SoapUI we can create wrapper and request objects and similarly parse the response received. Its as simple as that. In case you are stuck, you can look at all the classes created by the wsdl2ruby script by having a look at the generated file (EmployeeServiceImplService.rb in our case).&lt;/code&gt;&lt;/pre&gt;</content>
  </entry>
  <entry>
    <title>Integrating JRuby and Java to create a mini rules engine</title>
    <link rel="http://rockyj.in" href="/2011/04/01/2011-04-01-hello-world.html"/>
    <id>http://rockyj.in/2011/04/01/2011-04-01-hello-world.html</id>
    <published>2011-04-01T00:00:00+05:30</published>
    <updated>2011-04-01T00:00:00+05:30</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;pre&gt;&lt;code&gt;Ruby is a beautiful language, but that is just me saying it. A thing of beauty has to be experienced on its own by someone. A major reason behind the slow adoption of Ruby in the enterprise is infrastructure / installation and speed. Although, personally I have never seen Ruby as slow (specially 1.9), but asking someone to run Ruby code on his/her machine is a problem as they need to install Ruby and other associated &amp;#39;gems&amp;#39; used by my program. Enter &amp;lt;a href=&amp;quot;http://www.jruby.org&amp;quot; target=&amp;quot;_blank&amp;quot;&amp;gt;JRuby&amp;lt;/a&amp;gt; - it is a 100% pure Java implementation of the Ruby Programming Language, so in effect you can run a JRuby program on any machine that has a JVM. Just include a jar and you are good to go.&lt;/code&gt;&lt;/pre&gt;</summary>
    <content type="html">&lt;pre&gt;&lt;code&gt;Ruby is a beautiful language, but that is just me saying it. A thing of beauty has to be experienced on its own by someone. A major reason behind the slow adoption of Ruby in the enterprise is infrastructure / installation and speed. Although, personally I have never seen Ruby as slow (specially 1.9), but asking someone to run Ruby code on his/her machine is a problem as they need to install Ruby and other associated &amp;#39;gems&amp;#39; used by my program. Enter &amp;lt;a href=&amp;quot;http://www.jruby.org&amp;quot; target=&amp;quot;_blank&amp;quot;&amp;gt;JRuby&amp;lt;/a&amp;gt; - it is a 100% pure Java implementation of the Ruby Programming Language, so in effect you can run a JRuby program on any machine that has a JVM. Just include a jar and you are good to go.
&amp;lt;!--more--&amp;gt;
JRuby also integrates very easily with Java (both run on JVM) and helps you solve some pain areas in Java. I used it today in my project to dynamically (Ruby being a dynamic and interpreted language) generate and execute rules. Imagine a scenario on a website where you want to find a Customer&amp;#39;s class from the loyalty points he has in his account. So lets say, if the customer has upto 1000 loyalty points he is &amp;quot;BRONZE&amp;quot; member, between 1000 and 2000 he is &amp;quot;SILVER&amp;quot; member and so on and so forth.

If this is done in pure Java, you can create these rules in your code but you cannot implement changes easily. For example, adding a new customer class will involve code change and server restart. Using a database, properties files or a rules engine will still not offer you a lot and will be difficult to setup and maintain and one can be assured that they will need to restart the server sooner or later as rules become complex. 

However, if we implement this logic in JRuby we will have reasonably clean code and logic can be delegated to a clean and dynamic language like Ruby which even a business manager can maintain.

So lets get started. First let us add the JRuby jar to our project (through Maven) - 
&amp;lt;dependency&amp;gt;
&amp;lt;groupId&amp;gt;org.jruby&amp;lt;/groupId&amp;gt;
&amp;lt;artifactId&amp;gt;jruby-complete&amp;lt;/artifactId&amp;gt;
&amp;lt;version&amp;gt;1.5.6&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;

Now, let us create a simple Ruby script that will contain the logic -
class CustomerClassSelector
  def choose_class(points)
    return &amp;quot;BRONZE&amp;quot; if (0..999).include?(points)
    return &amp;quot;SILVER&amp;quot; if (1000..1999).include?(points)
    return &amp;quot;GOLD&amp;quot; if (2000..2999).include?(points)
    return &amp;quot;PLATINUM&amp;quot;
  end 
end
Save it as customer_class_selector.rb at a place where your project config lies. The code itself is pretty easy to understand even if you don&amp;#39;t know Ruby syntax. The &amp;quot;(0..999)&amp;quot; is a Range in Ruby and it has a method &amp;quot;include?(param)&amp;quot; that returns true if the param lies in the Range.

Now for calling this code from Java -
       String getCustomerClass(int loyaltyPoints) {
		ScriptingContainer container = new ScriptingContainer(LocalContextScope.THREADSAFE);
		container.setLoadPaths(Arrays.asList(&amp;quot;/home/rocky/mysite/config&amp;quot;));
		container.runScriptlet(&amp;quot;require &amp;#39;customer_class_selector&amp;#39;&amp;quot;);
		Object greeter = container.runScriptlet(&amp;quot;CustomerClassSelector.new&amp;quot;);
		String customerClass = container.callMethod(greeter, &amp;quot;choose_class&amp;quot;, loyaltyPoints, String.class);
		return customerClass;
	}

&amp;lt;ol&amp;gt;
	&amp;lt;li&amp;gt;In this method, we initiate a Scripting container (package org.jruby.embed) that is available through our Maven dependency / jar added above. We pass it an argument so that container is not loaded as a singleton and the script is run every time its invoked. &amp;lt;/li&amp;gt;
	&amp;lt;li&amp;gt;Then through this container we load the path where JRuby scripts / libraries are (like classpath in Java).&amp;lt;/li&amp;gt;
	&amp;lt;li&amp;gt;We then load the scriptlet we saved earlier.&amp;lt;/li&amp;gt;
        &amp;lt;li&amp;gt;Next we intantiate the class defined in the Ruby script above.&amp;lt;/li&amp;gt;
	&amp;lt;li&amp;gt;Finally, we call the method choose_class passing the loyalty points and registering the return value type as String.&amp;lt;/li&amp;gt;
&amp;lt;/ol&amp;gt;

We now can play with the rules inside the Ruby script as much as we want. Anyone can change the Ranges and add/remove Customer classes but we will never need to restart our web application or modify the Java code. That is the power of dynamic languages in action! Simple and powerful, ain&amp;#39;t it :).&lt;/code&gt;&lt;/pre&gt;</content>
  </entry>
  <entry>
    <title>From Zero to a CRUD App (without writing a single line of code) using JRuby</title>
    <link rel="http://rockyj.in" href="/2011/03/31/from-zero-to-a-crud-app-without-writing-a-single-line-of-code-using-jruby.html"/>
    <id>http://rockyj.in/2011/03/31/from-zero-to-a-crud-app-without-writing-a-single-line-of-code-using-jruby.html</id>
    <published>2011-03-31T00:00:00+05:30</published>
    <updated>2011-03-31T00:00:00+05:30</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;pre&gt;&lt;code&gt;    This blog introduces you to JRuby and Rails. We will create a simple web application with CRUD features and deploy it on Tomcat.

    Required Software -
    - JDK 6
    - Tomcat 6
    - MySql
    - JRuby (&amp;lt;a href=&amp;quot;http://jruby.org/download&amp;quot;&amp;gt;http://jruby.org/download&amp;lt;/a&amp;gt;)


    The blog assumes that you have JDK, MySql and Tomcat set up. Download JRuby from the link above and add the {JRUBY_DIR}/bin to your classpath.

    Let&amp;#39;s run the first command (from any directory) -&lt;/code&gt;&lt;/pre&gt;</summary>
    <content type="html">&lt;pre&gt;&lt;code&gt;    This blog introduces you to JRuby and Rails. We will create a simple web application with CRUD features and deploy it on Tomcat.

    Required Software -
    - JDK 6
    - Tomcat 6
    - MySql
    - JRuby (&amp;lt;a href=&amp;quot;http://jruby.org/download&amp;quot;&amp;gt;http://jruby.org/download&amp;lt;/a&amp;gt;)


    The blog assumes that you have JDK, MySql and Tomcat set up. Download JRuby from the link above and add the {JRUBY_DIR}/bin to your classpath.

    Let&amp;#39;s run the first command (from any directory) -

    jruby -S gem install mongrel activerecord-jdbcmysql-adapter rails

    If the command above complains of lack of jruby-openssl then abort it (using Ctrl+C) and first run &amp;quot;jruby -S gem install jruby-openssl&amp;quot;.

    This will install mongrel server, activerecord-jdbcmysql-adapter and rails. &amp;quot;gem install&amp;quot; is the Ruby way to install libraries, in Java you download jars and add them to your classpath. Similarly in Ruby you do a &amp;quot;gem install&amp;quot; which does everything for you.

    Now run the following command -

    jruby -S rails XLib -d mysql

    Here we are using JRuby to tell Rails (a Ruby web application framework) to create a application XLib which uses MySql as the database.

    Enter the newly-created &amp;quot;XLib&amp;quot; directory, then modify the config/database.yml. First and foremost, you need to adjust the adapter name, and instead of &amp;#39;mysql&amp;#39; you should specify &amp;#39;jdbcmysql&amp;#39;. You might also want to delete the lines starting with &amp;#39;socket:&amp;#39;. Your development environment config can look like -

    development:
    adapter: jdbcmysql
    encoding: utf8
    reconnect: false
    database: XLib_dev
    pool: 5
    username: root
    password: root


    Now let&amp;#39;s create our schema (make sure you are in your XLib directory) -

    jruby -S rake db:create:all

    The command above runs a rake (like make but for Ruby) task that creates the necessary schema in MySql.

    * Please note, there is currently a bug in activerecord-jdbcmysql-adapter due to which first time schema creation may not work. You can create the schema manually (just name it XLib_dev as in config above), this is a one time task so it doesn&amp;#39;t hurt too much.

    Now lets run  -

    jruby script/generate scaffold book title:string authors:string genre:string quantity:int added_on:date

    Scaffolding is one of the main USPs of Rails, it generates the necessary CRUD  for a domain object, in our case a &amp;quot;book&amp;quot;.

    Now we need to update our database -

    jruby -S rake db:migrate

    We&amp;#39;re all done, let&amp;#39;s start the mongrel server -

    jruby script/server

    check out the application at -

    &amp;lt;a href=&amp;quot;http://localhost:3000/books&amp;quot;&amp;gt;http://localhost:3000/books&amp;lt;/a&amp;gt;

    You can add, edit, delete and see a listing of all the books.

    We used JRuby (which is the Java implementation of Ruby) so that our application can run on JVM. Since it can run on JVM it can also run on Tomcat. To run it on Tomcat we first need to convert it to a war file. You guessed it, there is a gem for that - 

    jruby -S gem install warbler

    Next, run the following (inside XLib directory) -

    warble config

    This will generate a config file for warble as warble.rb in your app&amp;#39;s config directory

    Open this config file and add the following line at the end -

    config.gems += [&amp;quot;activerecord-jdbcmysql-adapter&amp;quot;, &amp;quot;jruby-openssl&amp;quot;]

    This enables the gems above to be bundled in your war, otherwise Tomcat complains of missing libraries.

    Now, run the command -

    warble

    This will create XLib.war in you XLib directory, copy this file to your $TOMCAT_HOME/webapps and start Tomcat. This will unzip the war, shutdown Tomcat after a while, check XLibs&amp;#39; web.xml and make sure the environment points to development. Restart Tomcat.

    Go to &amp;lt;a href=&amp;quot;http://localhost:8080/XLib/books&amp;quot;&amp;gt;http://localhost:8080/XLib/books&amp;lt;/a&amp;gt;

    And that&amp;#39;s it, you have a CRUD application running on Tomcat without even writing a single line of .&lt;/code&gt;&lt;/pre&gt;</content>
  </entry>
  <entry>
    <title>Hello jQuery!</title>
    <link rel="http://rockyj.in" href="/2011/03/31/2011-03-31-hello-jquery.html"/>
    <id>http://rockyj.in/2011/03/31/2011-03-31-hello-jquery.html</id>
    <published>2011-03-31T00:00:00+05:30</published>
    <updated>2011-03-31T00:00:00+05:30</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;pre&gt;&lt;code&gt;    JavaScript libraries/frameworks have gained a lot of popularity lately. A small though significant reason for the development / adoption of these libraries has been the large number of browsers, even writing a small piece of JavaScript which works on IE6, IE7, IE8, Firefox 2, 3+ and Chrome can be pain, on the other hand inclusion of a library that can work across browsers can ease the development immensely.

    A simple Google search will give you many alternatives like prototype, dojo, yui, extjs and jQuery. Though each library is really good at something (like Scriptaculous for animation, extjs for rich UI), I found jQuery to be generally most useful and functionally very rich. In this blog I will discuss the basic usage of jQuery, its syntax and applications, hope you find it useful.&lt;/code&gt;&lt;/pre&gt;</summary>
    <content type="html">&lt;pre&gt;&lt;code&gt;    JavaScript libraries/frameworks have gained a lot of popularity lately. A small though significant reason for the development / adoption of these libraries has been the large number of browsers, even writing a small piece of JavaScript which works on IE6, IE7, IE8, Firefox 2, 3+ and Chrome can be pain, on the other hand inclusion of a library that can work across browsers can ease the development immensely.

    A simple Google search will give you many alternatives like prototype, dojo, yui, extjs and jQuery. Though each library is really good at something (like Scriptaculous for animation, extjs for rich UI), I found jQuery to be generally most useful and functionally very rich. In this blog I will discuss the basic usage of jQuery, its syntax and applications, hope you find it useful.


    &amp;lt;strong&amp;gt;jQuery Setup&amp;lt;/strong&amp;gt;

    jQuery can be downloaded from -

    &amp;lt;a href=&amp;quot;http://code.jquery.com/jquery-1.4.1.min.js&amp;quot;&amp;gt;http://code.jquery.com/jquery-1.4.1.min.js&amp;lt;/a&amp;gt;

    If you are working on an internet application, you will be better off downloading it from Google
    &amp;lt;a href=&amp;quot; http://ajax.googleapis.com/ajax/libs/jquery/1.4.1/jquery.min.js&amp;quot;&amp;gt;
    http://ajax.googleapis.com/ajax/libs/jquery/1.4.1/jquery.min.js&amp;lt;/a&amp;gt;

    Inclusion of jQuery is adding a standard line in html -

    &amp;amp;lt;script language=&amp;quot;javascript&amp;quot; src=&amp;quot;http://ajax.googleapis.com/ajax/libs/jquery/1.4.1/jquery.min.js&amp;quot; /&amp;amp;gt;

    That is all it takes to setup jQuery.

    &amp;lt;strong&amp;gt;Working with jQuery&amp;lt;/strong&amp;gt;

    Almost all jQuery operations can be divided into two parts - Selection and Manipulation.

    jQuery allows you to select an HTML element and carry out operations on it. An example of this would be -

    $(&amp;quot;#an-id&amp;quot;).addClass(&amp;quot;error&amp;quot;)

    Here we have used jQuery to select an HTML element of id &amp;quot;an-id&amp;quot; and add a style class to it. The part before the dot (.) is equivalent to document.getElementById(&amp;quot;an-id&amp;quot;) but is much easier to write.

    Most of the times you would be carrying out jQuery operations / functions on execution of an event, such as clicking a button etc. The question then arises, when do I register my event handlers. You may do something like &amp;amp;lt;input type=&amp;quot;button&amp;quot; onClick=&amp;quot;..&amp;quot;&amp;amp;gt; but this is generally not considered good practice, with jQuery who can register your handlers in this way -

    $(document).ready(function(){
    &amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;//Register Handlers
    &amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;$(&amp;quot;#mainLink&amp;quot;).click(function(event){
    &amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;alert(&amp;quot;Thanks for visiting!&amp;quot;);
    &amp;amp;nbsp;&amp;amp;nbsp;});
    });

    The inclusion of the above lines anywhere in your HTML code is good enough to register your handlers with jQuery. The advantage here is that the code is executed after the DOM has been loaded but before the images have been downloaded.$(...).

    &amp;lt;strong&amp;gt;Selecting elements with jQuery&amp;lt;/strong&amp;gt;

    &amp;lt;table border=&amp;quot;1&amp;quot;&amp;gt;
    &amp;lt;tbody&amp;gt;
    &amp;lt;tr&amp;gt;
    &amp;lt;td&amp;gt;Selector&amp;lt;/td&amp;gt;
    &amp;lt;td&amp;gt;Example&amp;lt;/td&amp;gt;
    &amp;lt;td&amp;gt;Explanation&amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
    &amp;lt;tr&amp;gt;
    &amp;lt;td&amp;gt;#id&amp;lt;/td&amp;gt;
    &amp;lt;td&amp;gt;$(&amp;quot;#id&amp;quot;)&amp;lt;/td&amp;gt;
    &amp;lt;td&amp;gt;Selection through a DOM id&amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
    &amp;lt;tr&amp;gt;
    &amp;lt;td&amp;gt;element&amp;lt;/td&amp;gt;
    &amp;lt;td&amp;gt;$(&amp;quot;li&amp;quot;)&amp;lt;/td&amp;gt;
    &amp;lt;td&amp;gt;Returns all
    	&amp;amp;lt;li&amp;amp;gt; elements&amp;amp;lt;/li&amp;amp;gt;
    &amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
    &amp;lt;tr&amp;gt;
    &amp;lt;td&amp;gt;.class&amp;lt;/td&amp;gt;
    &amp;lt;td&amp;gt;$(&amp;quot;.error&amp;quot;)&amp;lt;/td&amp;gt;
    &amp;lt;td&amp;gt;Returns all elements with &amp;amp;lt;.. class=&amp;quot;error&amp;quot; ...&amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
    &amp;lt;tr&amp;gt;
    &amp;lt;td&amp;gt;element.class&amp;lt;/td&amp;gt;
    &amp;lt;td&amp;gt;$(&amp;quot;div.error&amp;quot;)&amp;lt;/td&amp;gt;
    &amp;lt;td&amp;gt;Returns all elements with &amp;amp;lt;div class=&amp;quot;error&amp;quot; ...&amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
    &amp;lt;tr&amp;gt;
    &amp;lt;td&amp;gt;elem1 elem2&amp;lt;/td&amp;gt;
    &amp;lt;td&amp;gt;$(&amp;quot;div.a div.b&amp;quot;)&amp;lt;/td&amp;gt;
    &amp;lt;td&amp;gt;Returns all elements &amp;amp;lt;div class=&amp;quot;b&amp;quot;&amp;amp;gt; which are inside&amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
    &amp;lt;tr&amp;gt;
    &amp;lt;td&amp;gt;elem[att=val]&amp;lt;/td&amp;gt;
    &amp;lt;td&amp;gt;$(&amp;quot;a[href=page1]&amp;quot;)&amp;lt;/td&amp;gt;
    &amp;lt;td&amp;gt;Returns all elements with &amp;amp;lt;a href=&amp;quot;page1&amp;quot;&amp;amp;gt;&amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
    &amp;lt;tr&amp;gt;
    &amp;lt;td&amp;gt;elem[att^=val]&amp;lt;/td&amp;gt;
    &amp;lt;td&amp;gt;$(&amp;quot;a[href^=page]&amp;quot;)&amp;lt;/td&amp;gt;
    &amp;lt;td&amp;gt;Returns all anchor elements with attribute href&amp;#39;s value starting with page (Regex)
    &amp;lt;/tr&amp;gt;
    &amp;lt;/tbody&amp;gt;&amp;lt;/table&amp;gt;
    Though there are many other types of selectors I have covered the basics here and leave it upto you to explore as per your needs.

    &amp;lt;strong&amp;gt;Some operations with jQuery&amp;lt;/strong&amp;gt;

    &amp;lt;table border=&amp;quot;1&amp;quot;&amp;gt;
    &amp;lt;tbody&amp;gt;
    &amp;lt;tr&amp;gt;
    &amp;lt;td&amp;gt;$(...).html(&amp;quot;&amp;amp;lt;b&amp;amp;gt;Hello&amp;amp;lt;/b&amp;amp;gt;&amp;quot;)&amp;lt;/td&amp;gt;
    &amp;lt;td&amp;gt;Sets the inner HTML to &amp;lt;strong&amp;gt;Hello&amp;lt;/strong&amp;gt;&amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
    &amp;lt;tr&amp;gt;
    &amp;lt;td&amp;gt;$(...).addClass(&amp;quot;error&amp;quot;)&amp;lt;/td&amp;gt;
    &amp;lt;td&amp;gt;Sets the css style to error&amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
    &amp;lt;tr&amp;gt;
    &amp;lt;td&amp;gt;$(...).attr(&amp;#39;name&amp;#39;, &amp;#39;value&amp;#39;)&amp;lt;/td&amp;gt;
    &amp;lt;td&amp;gt;Sets the element&amp;#39;s attribute name to value&amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
    &amp;lt;tr&amp;gt;
    &amp;lt;td&amp;gt;$(...).clone()&amp;lt;/td&amp;gt;
    &amp;lt;td&amp;gt;Clones / Copies the content of the DOM node&amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
    &amp;lt;tr&amp;gt;
    &amp;lt;td&amp;gt;$(...).click(clickHandler)&amp;lt;/td&amp;gt;
    &amp;lt;td&amp;gt;Assigns a event handler to an event
    $(...).each(function() {
    $(this).addClass(&amp;#39;&amp;#39;)
    }); For each element returned by a selection, apply a function (in this example a style class is added)&amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
    &amp;lt;/tbody&amp;gt;&amp;lt;/table&amp;gt;

    &amp;lt;strong&amp;gt;Ajax with jQuery&amp;lt;/strong&amp;gt;

    jQuery really makes it easy to send AJAX requests and deal with the response. The simplest example would be -

    $.ajax({url: &amp;quot;address&amp;quot;, success: funct1});

    The handler function (funct1 above) gets the response text not the response object, the response can be XML, HTML, JSON or text. The function again can use jQuery to manipulate the DOM, for example display the response in a DIV.

    &amp;lt;strong&amp;gt;jQueryUI&amp;lt;/strong&amp;gt;

    This blog would not be complete without a mention of jQueryUI - &amp;lt;a href=&amp;quot;http://jqueryui.com/&amp;quot;&amp;gt;http://jqueryui.com/&amp;lt;/a&amp;gt; - jQueryUI builds upon jQuery to provide an effects and interaction API as well as ready to use widgets. Using jQueryUI, it is a breeze to add behaviours like draggable and resizeable to spans/divs. The widgets include a highly customizable date picker among others. Feel free to visit the jQueryUI site to see the demos.&lt;/code&gt;&lt;/pre&gt;</content>
  </entry>
  <entry>
    <title>Google App Engine + Maven + JSF2</title>
    <link rel="http://rockyj.in" href="/2011/03/31/2011-03-31-google-app-engine-maven-jsf2.html"/>
    <id>http://rockyj.in/2011/03/31/2011-03-31-google-app-engine-maven-jsf2.html</id>
    <published>2011-03-31T00:00:00+05:30</published>
    <updated>2011-03-31T00:00:00+05:30</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;pre&gt;&lt;code&gt;    I have tried to put all the keywords in the title of this blog, hoping that it will turn some heads. Google App Engine (GAE) provides a great hosting platform for open source apps written in Java/Python. So if you have no qualms about hosting you Java applications on a public server then you have no better choice than GAE.

    The only catch however is, that GAE does not support certain APIs (see the white-list here - &amp;lt;a href=&amp;quot;http://code.google.com/intl/de/appengine/docs/java/jrewhitelist.html&amp;quot; target=&amp;quot;_blank&amp;quot;&amp;gt;http://code.google.com/intl/de/appengine/docs/java/jrewhitelist.html&amp;lt;/a&amp;gt;). This restriction makes it difficult to host certain apps / frameworks.&lt;/code&gt;&lt;/pre&gt;</summary>
    <content type="html">&lt;pre&gt;&lt;code&gt;    I have tried to put all the keywords in the title of this blog, hoping that it will turn some heads. Google App Engine (GAE) provides a great hosting platform for open source apps written in Java/Python. So if you have no qualms about hosting you Java applications on a public server then you have no better choice than GAE.

    The only catch however is, that GAE does not support certain APIs (see the white-list here - &amp;lt;a href=&amp;quot;http://code.google.com/intl/de/appengine/docs/java/jrewhitelist.html&amp;quot; target=&amp;quot;_blank&amp;quot;&amp;gt;http://code.google.com/intl/de/appengine/docs/java/jrewhitelist.html&amp;lt;/a&amp;gt;). This restriction makes it difficult to host certain apps / frameworks.

    GAE provides the infrastructure, a modified Jetty server included in the GAE SDK (&amp;lt;a href=&amp;quot;http://code.google.com/appengine/downloads.html&amp;quot; target=&amp;quot;_blank&amp;quot;&amp;gt;http://code.google.com/appengine/downloads.html&amp;lt;/a&amp;gt;) though which you can test your app. If it runs on the local GAE Jetty server then it will also run on GAE itself. The project structure that Google asks you to create for uploading an app is also quite typical (unless you use Ant) which brings me to my next point.

    &amp;lt;!--more--&amp;gt;

    Maven is my favorite build tool, it would really take something for me to move on to Ant now. So I tried to create my application using Maven and then test it locally on GAE&amp;#39;s Jetty and finally upload it to GAE. After a little search I found the Maven GAE plugin (&amp;lt;a href=&amp;quot;http://code.google.com/p/maven-gae-plugin/&amp;quot;&amp;gt;http://code.google.com/p/maven-gae-plugin/&amp;lt;/a&amp;gt;).

    Below is my pom.xml to make this plugin work - 

    &amp;lt;project xmlns=&amp;quot;http://maven.apache.org/POM/4.0.0&amp;quot; xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot;
             xsi:schemaLocation=&amp;quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd&amp;quot;&amp;gt;

        &amp;lt;modelVersion&amp;gt;4.0.0&amp;lt;/modelVersion&amp;gt;
        &amp;lt;groupId&amp;gt;net.rocky&amp;lt;/groupId&amp;gt;
        &amp;lt;artifactId&amp;gt;rocky-gae-app&amp;lt;/artifactId&amp;gt;
        &amp;lt;packaging&amp;gt;war&amp;lt;/packaging&amp;gt;
        &amp;lt;version&amp;gt;1&amp;lt;/version&amp;gt;
        &amp;lt;name&amp;gt;rocky-gae-app&amp;lt;/name&amp;gt;
        &amp;lt;url&amp;gt;http://maven.apache.org&amp;lt;/url&amp;gt;

        &amp;lt;repositories&amp;gt;
            &amp;lt;repository&amp;gt;
                &amp;lt;id&amp;gt;java.net&amp;lt;/id&amp;gt;
                &amp;lt;url&amp;gt;http://download.java.net/maven/2&amp;lt;/url&amp;gt;
            &amp;lt;/repository&amp;gt;
        &amp;lt;/repositories&amp;gt;

        &amp;lt;pluginRepositories&amp;gt;
            &amp;lt;pluginRepository&amp;gt;
                &amp;lt;id&amp;gt;maven-gae-plugin-repo&amp;lt;/id&amp;gt;
                &amp;lt;name&amp;gt;maven-gae-plugin repository&amp;lt;/name&amp;gt;
                &amp;lt;url&amp;gt;http://maven-gae-plugin.googlecode.com/svn/repository&amp;lt;/url&amp;gt;
            &amp;lt;/pluginRepository&amp;gt;
        &amp;lt;/pluginRepositories&amp;gt;

        &amp;lt;dependencies&amp;gt;
            &amp;lt;dependency&amp;gt;
                &amp;lt;groupId&amp;gt;javax.servlet&amp;lt;/groupId&amp;gt;
                &amp;lt;artifactId&amp;gt;servlet-api&amp;lt;/artifactId&amp;gt;
                &amp;lt;version&amp;gt;2.5&amp;lt;/version&amp;gt;
                &amp;lt;scope&amp;gt;provided&amp;lt;/scope&amp;gt;
            &amp;lt;/dependency&amp;gt;
            &amp;lt;dependency&amp;gt;
                &amp;lt;groupId&amp;gt;javax.servlet.jsp&amp;lt;/groupId&amp;gt;
                &amp;lt;artifactId&amp;gt;jsp-api&amp;lt;/artifactId&amp;gt;
                &amp;lt;version&amp;gt;2.1&amp;lt;/version&amp;gt;
                &amp;lt;scope&amp;gt;provided&amp;lt;/scope&amp;gt;
            &amp;lt;/dependency&amp;gt;
            &amp;lt;dependency&amp;gt;
                &amp;lt;groupId&amp;gt;com.sun.faces&amp;lt;/groupId&amp;gt;
                &amp;lt;artifactId&amp;gt;jsf-api&amp;lt;/artifactId&amp;gt;
                &amp;lt;version&amp;gt;2.0.2&amp;lt;/version&amp;gt;
            &amp;lt;/dependency&amp;gt;
            &amp;lt;dependency&amp;gt;
                &amp;lt;groupId&amp;gt;com.sun.faces&amp;lt;/groupId&amp;gt;
                &amp;lt;artifactId&amp;gt;jsf-impl&amp;lt;/artifactId&amp;gt;
                &amp;lt;version&amp;gt;2.0.2&amp;lt;/version&amp;gt;
                &amp;lt;classifier&amp;gt;gae&amp;lt;/classifier&amp;gt;
            &amp;lt;/dependency&amp;gt;
            &amp;lt;dependency&amp;gt;
                &amp;lt;groupId&amp;gt;org.glassfish.web&amp;lt;/groupId&amp;gt;
                &amp;lt;artifactId&amp;gt;el-impl&amp;lt;/artifactId&amp;gt;
                &amp;lt;version&amp;gt;2.2&amp;lt;/version&amp;gt;
            &amp;lt;/dependency&amp;gt;
            &amp;lt;dependency&amp;gt;
                &amp;lt;groupId&amp;gt;junit&amp;lt;/groupId&amp;gt;
                &amp;lt;artifactId&amp;gt;junit&amp;lt;/artifactId&amp;gt;
                &amp;lt;version&amp;gt;4.8.1&amp;lt;/version&amp;gt;
                &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;
            &amp;lt;/dependency&amp;gt;
        &amp;lt;/dependencies&amp;gt;

        &amp;lt;build&amp;gt;
            &amp;lt;plugins&amp;gt;
                &amp;lt;plugin&amp;gt;
                    &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;
                    &amp;lt;artifactId&amp;gt;maven-compiler-plugin&amp;lt;/artifactId&amp;gt;
                    &amp;lt;version&amp;gt;2.0.2&amp;lt;/version&amp;gt;
                    &amp;lt;configuration&amp;gt;
                        &amp;lt;source&amp;gt;1.6&amp;lt;/source&amp;gt;
                        &amp;lt;target&amp;gt;1.6&amp;lt;/target&amp;gt;
                    &amp;lt;/configuration&amp;gt;
                &amp;lt;/plugin&amp;gt;
                &amp;lt;plugin&amp;gt;
                    &amp;lt;groupId&amp;gt;net.kindleit&amp;lt;/groupId&amp;gt;
                    &amp;lt;artifactId&amp;gt;maven-gae-plugin&amp;lt;/artifactId&amp;gt;
                    &amp;lt;version&amp;gt;0.6.0&amp;lt;/version&amp;gt;
                    &amp;lt;configuration&amp;gt;
                        &amp;lt;sdkDir&amp;gt;/home/rockyj/01rocky/02apps/appengine-java-sdk-1.3.5&amp;lt;/sdkDir&amp;gt;
                    &amp;lt;/configuration&amp;gt;
                &amp;lt;/plugin&amp;gt;
            &amp;lt;/plugins&amp;gt;
            &amp;lt;finalName&amp;gt;rocky-gae-app&amp;lt;/finalName&amp;gt;
        &amp;lt;/build&amp;gt;
        
    &amp;lt;/project&amp;gt;

    I have included the whole pom as there is hardly anything I can miss here. The GAE plugin is not in maven central so we need to include the plugin repository, the dependencies are pretty standard except one (which I will explain in a moment) and the plugin itself needs the configuration to know where you have the GAE SDK.

    As I mentioned earlier, some classes are blacklisted on the GAE so your default jsf-impl.jar (Mojarra) wil not work on GAE. You will need a modified jar which you can download from here (&amp;lt;a href=&amp;quot;http://code.google.com/p/joshjcarrier/source/browse/trunk/Sun%20JSF%20GAE/jsf-impl-gae.jar&amp;quot;&amp;gt;http://code.google.com/p/joshjcarrier/source/browse/trunk/Sun%20JSF%20GAE/jsf-impl-gae.jar&amp;lt;/a&amp;gt;), if you have a Nexus repo you can install the modified jar there or install the jar in you local repository manually. Also as seen in the pom, for resolving EL (Expression Language) you need el-impl.jar, GAE does not support EL unlike Tomcat. 

    To make JSF work you need the following entries in your web.xml -

        &amp;lt;!-- Seems like GAE 1.2.6 cannot handle server side session management. At least for JSF 2.0.1 --&amp;gt; 
        &amp;lt;context-param&amp;gt; 
          &amp;lt;param-name&amp;gt;javax.faces.STATE_SAVING_METHOD&amp;lt;/param-name&amp;gt; 
          &amp;lt;param-value&amp;gt;client&amp;lt;/param-value&amp;gt; 
        &amp;lt;/context-param&amp;gt; 
        &amp;lt;!-- Recommendation from GAE pages  --&amp;gt; 
        &amp;lt;context-param&amp;gt; 
          &amp;lt;param-name&amp;gt;javax.faces.PROJECT_STAGE&amp;lt;/param-name&amp;gt; 
          &amp;lt;param-value&amp;gt;Production&amp;lt;/param-value&amp;gt; 
        &amp;lt;/context-param&amp;gt;
        &amp;lt;!-- Accommodate Single-Threaded Requirement of Google AppEngine  --&amp;gt;
        &amp;lt;context-param&amp;gt;
          &amp;lt;param-name&amp;gt;com.sun.faces.enableThreading&amp;lt;/param-name&amp;gt;
          &amp;lt;param-value&amp;gt;false&amp;lt;/param-value&amp;gt;
        &amp;lt;/context-param&amp;gt;

    Finally, in your appengine-web.xml (the GAE configuration file), you need the following entry - 

    &amp;lt;sessions-enabled&amp;gt;true&amp;lt;/sessions-enabled&amp;gt;

    That&amp;#39;s it. Now you can work on your JSF2 application. To test, all you need to do is : &amp;lt;strong&amp;gt;mvn clean gae:run&amp;lt;/strong&amp;gt;

    For uploading the application, I would still recommend using the SDK provided script (otherwise you need a whole lot of other changes). What I do is - 

    $HOME/01rocky/02apps/appengine-java-sdk-1.3.5/bin/appcfg.sh update /home/rockyj/01rocky/03workspace/scbcd/rocky-gae-app/target/rocky-gae-app/

    This means run the GAE script with the param &amp;lt;strong&amp;gt;&amp;quot;update&amp;quot;&amp;lt;/strong&amp;gt; and the path to your maven created target folder. If you have signed up for GAE, it will ask your username and password and your app will be uploaded to GAE.&lt;/code&gt;&lt;/pre&gt;</content>
  </entry>
  <entry>
    <title>Integrating Spring 3 with JPA 2</title>
    <link rel="http://rockyj.in" href="/2011/03/31/2011-03-31-integrating-spring-3-with-jpa-2.html"/>
    <id>http://rockyj.in/2011/03/31/2011-03-31-integrating-spring-3-with-jpa-2.html</id>
    <published>2011-03-31T00:00:00+05:30</published>
    <updated>2011-03-31T00:00:00+05:30</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;pre&gt;&lt;code&gt;	I have been working on Grails recently and am amazed with the productivity gains it gives. Grails is great for giving you a kick-start, it uses convention over configuration and gives you things such as ORM, transaction management, dependency injection among others, without you writing a single line of configuration.

	I decided to mimic the Grails behavior in a Spring + Hibernate application. To stay on the cutting edge I decided to use Hibernate 3.5 and Spring 3, to top it up I decided to use Hibernate as an implementation of JPA 2. Recently released, Hibernate 3.5 combines the Hibernate Annotations and the Hibernate Entity-Manager projects into Hibernate-Core, so basically its just one jar which provides the full implementation of JPA 2. For advantages of using JPA 2 see the excellent presentation here - &amp;lt;a href=&amp;quot;http://jazoon.com/portals/0/Content/ArchivWebsite/jazoon.com/jazoon09/download/presentations/8461.pdf&amp;quot;&amp;gt;http://jazoon.com/portals/0/Content/ArchivWebsite/jazoon.com/jazoon09/download/presentations/8461.pdf&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/pre&gt;</summary>
    <content type="html">&lt;pre&gt;&lt;code&gt;	I have been working on Grails recently and am amazed with the productivity gains it gives. Grails is great for giving you a kick-start, it uses convention over configuration and gives you things such as ORM, transaction management, dependency injection among others, without you writing a single line of configuration.

	I decided to mimic the Grails behavior in a Spring + Hibernate application. To stay on the cutting edge I decided to use Hibernate 3.5 and Spring 3, to top it up I decided to use Hibernate as an implementation of JPA 2. Recently released, Hibernate 3.5 combines the Hibernate Annotations and the Hibernate Entity-Manager projects into Hibernate-Core, so basically its just one jar which provides the full implementation of JPA 2. For advantages of using JPA 2 see the excellent presentation here - &amp;lt;a href=&amp;quot;http://jazoon.com/portals/0/Content/ArchivWebsite/jazoon.com/jazoon09/download/presentations/8461.pdf&amp;quot;&amp;gt;http://jazoon.com/portals/0/Content/ArchivWebsite/jazoon.com/jazoon09/download/presentations/8461.pdf&amp;lt;/a&amp;gt;

	&amp;lt;strong&amp;gt;Integrating Hibernate with JPA 2&amp;lt;/strong&amp;gt;

	As usual, I started with a vanilla maven web project and started adding dependencies, the first being Hibernate - 
		&amp;lt;dependency&amp;gt;
	            &amp;lt;groupId&amp;gt;org.hibernate&amp;lt;/groupId&amp;gt;
	            &amp;lt;artifactId&amp;gt;hibernate-core&amp;lt;/artifactId&amp;gt;
	            &amp;lt;version&amp;gt;3.5.4-Final&amp;lt;/version&amp;gt;
		&amp;lt;/dependency&amp;gt;
	This dependency is found in the repository - &amp;lt;a href=&amp;quot;https://repository.jboss.org/nexus/content/groups/public/&amp;quot;&amp;gt;https://repository.jboss.org/nexus/content/groups/public/&amp;lt;/a&amp;gt; as mentioned on the Hibernate site. After a lot of pain I found that this jar did not match the jar you from &amp;lt;a href=&amp;quot;http://sourceforge.net/projects/hibernate/files/hibernate3&amp;quot;&amp;gt;http://sourceforge.net/projects/hibernate/files/hibernate3&amp;lt;/a&amp;gt;. So, I had to manually install the jar in my local repository (remember, I found this out after setting up JPA, Spring etc. which I will cover next). Similarly, in the JBoss repository I could not find the JPA 2 specfication jar (again available if you download the Hibernate distribution from sourceforge).I had to install that manually as well. After all this jiggery-pokery and some more, I somehow got Hibernate and JPA working.

	JPA needs a persistence.xml file in META-INF folder in the classpath. I added META-INF folder in source/main/resources with persistence.xml reading as - 
		&amp;lt;persistence xmlns=&amp;quot;http://java.sun.com/xml/ns/persistence&amp;quot;
		    xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot;
		    xsi:schemaLocation=&amp;quot;http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd&amp;quot;
		    version=&amp;quot;2.0&amp;quot;&amp;gt;
			&amp;lt;persistence-unit name=&amp;quot;postage&amp;quot; transaction-type=&amp;quot;RESOURCE_LOCAL&amp;quot;&amp;gt;
				&amp;lt;provider&amp;gt;org.hibernate.ejb.HibernatePersistence&amp;lt;/provider&amp;gt;
			&amp;lt;/persistence-unit&amp;gt;
		&amp;lt;/persistence&amp;gt;
	So, here I basically tell JPA that Hibernate is providing its implementation. Plus I give my persistence-unit a name &amp;quot;postage&amp;quot; (the name of my application).

	&amp;lt;strong&amp;gt;Integrating Spring with JPA&amp;lt;/strong&amp;gt;

	Now, I need to get Spring working with JPA and it is not exactly a cakewalk. With a lot of people pointing in different directions and the Spring documentation itself not very helpful in this particular aspect.

	The Spring JPA support itself offers three ways of setting up the JPA EntityManagerFactory, so that it can be used by the application to obtain an entity manager. I chose the &amp;quot;LocalContainerEntityManagerFactoryBean&amp;quot; because it gives full control over EntityManagerFactory configuration and is appropriate for fine-grained customization, if required. Below is my config - 
		&amp;lt;bean id=&amp;quot;entityManagerFactory&amp;quot; class=&amp;quot;org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean&amp;quot;
			p:dataSource-ref=&amp;quot;dataSource&amp;quot;&amp;gt;
			&amp;lt;property name=&amp;quot;jpaProperties&amp;quot;&amp;gt;
				&amp;lt;props&amp;gt;
					&amp;lt;prop key=&amp;quot;hibernate.dialect&amp;quot;&amp;gt;${hibernate.dialect}&amp;lt;/prop&amp;gt;
					&amp;lt;prop key=&amp;quot;hibernate.hbm2ddl.auto&amp;quot;&amp;gt;${hibernate.hbm2ddl.auto}&amp;lt;/prop&amp;gt;
					&amp;lt;prop key=&amp;quot;hibernate.show_sql&amp;quot;&amp;gt;${hibernate.show_sql}&amp;lt;/prop&amp;gt;
				&amp;lt;/props&amp;gt;
			&amp;lt;/property&amp;gt;      
		&amp;lt;/bean&amp;gt;
	As evident, you need a &amp;quot;dataSource&amp;quot; bean defined, which looks like - 
		&amp;lt;bean id=&amp;quot;dataSource&amp;quot; class=&amp;quot;org.springframework.jdbc.datasource.DriverManagerDataSource&amp;quot;
			p:driverClassName=&amp;quot;${dataSource.driverClassName}&amp;quot;
			p:url=&amp;quot;${dataSource.url}&amp;quot;
			p:username=&amp;quot;${dataSource.username}&amp;quot;
			p:password=&amp;quot;${dataSource.password}&amp;quot;
		/&amp;gt;
	To get the &amp;quot;${}&amp;quot; thingy working, i.e. a properties file lookup, add - 
		&amp;lt;context:property-placeholder location=&amp;quot;classpath:datasource.properties&amp;quot;/&amp;gt;
	datasource.properties can look like - 
		dataSource.driverClassName=org.hsqldb.jdbcDriver
		dataSource.url=jdbc:hsqldb:mem:postage
		dataSource.username=sa
		dataSource.password=
		#Hibernate Properties
		hibernate.hbm2ddl.auto=create-drop
		hibernate.dialect=org.hibernate.dialect.HSQLDialect
		hibernate.show_sql=true
	To get transactions working, add - 
		&amp;lt;tx:annotation-driven/&amp;gt;
	And define a transaction manager - 
		&amp;lt;bean id=&amp;quot;transactionManager&amp;quot; class=&amp;quot;org.springframework.orm.jpa.JpaTransactionManager&amp;quot;
				p:entityManagerFactory-ref=&amp;quot;entityManagerFactory&amp;quot;
		/&amp;gt;
	Now, assuming that you have an Entity &amp;quot;Post&amp;quot;, lets create the DAO - 
		@Repository
		@Transactional
		public class PostageDAOImpl implements PostageDAO {

			@PersistenceContext
			private EntityManager em;

			public void savePost(Post post){
				em.persist(post);
				em.flush();
			}

		}
	The @Transactional annotation makes the DAO transactional (remember we added &amp;lt;tx:annotation-driven/&amp;gt;). Let&amp;#39;s look at the other Annotations - @Repository annotation is a &amp;quot;stereotype&amp;quot; annotation added in Spring 2.5 which enables Spring to identify Beans for AOP pointcuts. In our case @Repository annotation also enables Spring to automatically convert JPA exceptions to Spring exception hierarchy. Finally, the EntityManager is automatically injected by Spring as it is annotated by @PersistenceContext. Also add - 
	      &amp;lt;context:component-scan base-package=&amp;quot;net.rocky.postage&amp;quot;/&amp;gt;
	This tag enables dependency injection with annotations and also auto-detects stereotype classes in the specified package and registers the corresponding beans. 

	That&amp;#39;s it! We have integrated Spring with JPA 2 and Hibernate. Let&amp;#39;s write a test case to verify our setup - 
	@RunWith(SpringJUnit4ClassRunner.class)
	@ContextConfiguration(&amp;quot;/applicationContext.xml&amp;quot;)
	public class PostageDAOImplTest {

		@Resource
		private PostageDAO postageDAOImpl;

		@Test
		public void testPostStorage() throws Exception {
			Post post = new Post();
			post.setComments(&amp;quot;A simple comment&amp;quot;);
			post.setDescription(&amp;quot;A simple description&amp;quot;);
			postageDAOImpl.savePost(post);
		}

	...

	&amp;lt;strong&amp;gt;Parting thoughts&amp;lt;/strong&amp;gt;

	This whole exercise took me a long time due to lack of comprehensive documentation, version mismatches and multiple approaches suggested by documents/bloggers. The advantage of the approach I have suggested above is that it allows you to switch to different databases for test/production as the datasource and dialect is specified in a .properties file.

	The big idea behind this exercise was to setup a DAO and domain layer akin to Grails which can be easily scaled up. We can further add a service layer to access the data and then use it over a UI. For my next blog I will build on this and create a web application that uses GWT as the front-end.&lt;/code&gt;&lt;/pre&gt;</content>
  </entry>
  <entry>
    <title>Accessing JBoss managed resources using MBeans</title>
    <link rel="http://rockyj.in" href="/2011/03/31/2011-03-31-accessing-jboss-managed-resources-using-mbeans.html"/>
    <id>http://rockyj.in/2011/03/31/2011-03-31-accessing-jboss-managed-resources-using-mbeans.html</id>
    <published>2011-03-31T00:00:00+05:30</published>
    <updated>2011-03-31T00:00:00+05:30</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;pre&gt;&lt;code&gt;    Recently I was working on an application that enables users to view the message count and the message content on all Queues deployed on a JBoss instance. Mainly, this application can be used by administrators to manage JMS Queues, it also provides a simple interface to create / delete queues as well as monitor messages on them.

    The challenge was to dynamically retrieve all the Queues deployed on the server and to make this application portable to any JBoss server instance.

        &amp;lt;strong&amp;gt;The Solution&amp;lt;/strong&amp;gt;&lt;/code&gt;&lt;/pre&gt;</summary>
    <content type="html">&lt;pre&gt;&lt;code&gt;    Recently I was working on an application that enables users to view the message count and the message content on all Queues deployed on a JBoss instance. Mainly, this application can be used by administrators to manage JMS Queues, it also provides a simple interface to create / delete queues as well as monitor messages on them.

    The challenge was to dynamically retrieve all the Queues deployed on the server and to make this application portable to any JBoss server instance.

        &amp;lt;strong&amp;gt;The Solution&amp;lt;/strong&amp;gt;
        In JBoss all components/services are Mbeans. An MBean is a Java object that implements one of the standard MBean interfaces and follows the associated design patterns. The MBean for a resource exposes all necessary information and operations that a management application needs to control the resource.

        So using the MBeans API you can, let&amp;#39;s say create a queue at runtime programatically. In the following exercise, we look at the code that will retrieve all JMS Queues deployed on a particular JBoss instance.


        An interesting application to note is the &amp;lt;span style=&amp;quot;color:#ff0000;&amp;quot;&amp;gt;jmx-console&amp;lt;/span&amp;gt; application that is packaged within JBoss. This application kind of does what we want to do. It displays all the MBeans deployed on the server. See screenshot -

        &amp;lt;img src=&amp;quot;http://xebee.xebia.in/wp-content/uploads/2009/11/jmx-console.png&amp;quot; alt=&amp;quot;JMX Console&amp;quot;  height=&amp;quot;100%&amp;quot; width=&amp;quot;100%&amp;quot;/&amp;gt;

        To see jmx-console, start the JBoss server on your local machine and go to &amp;lt;span style=&amp;quot;color:#0000ff;&amp;quot;&amp;gt;http://localhost:8080/jmx-console&amp;lt;/span&amp;gt;

        Straight away lets start with some code, below is the listing of a Servlet that contains our core logic -

        &amp;lt;strong&amp;gt;QBrowser.java&amp;lt;/strong&amp;gt;

        package net.rocky.qsoft.web;

        import java.io.IOException;
        import java.io.PrintWriter;
        import java.util.ArrayList;
        import java.util.List;
        import java.util.Map;
        import java.util.Set;
        import java.util.TreeMap;

        import javax.management.JMException;
        import javax.management.MBeanServer;
        import javax.management.ObjectName;
        import javax.servlet.ServletException;
        import javax.servlet.http.HttpServlet;
        import javax.servlet.http.HttpServletRequest;
        import javax.servlet.http.HttpServletResponse;

        import net.rocky.qsoft.model.MBeanData;

        import org.jboss.mx.util.MBeanServerLocator;

        public class QBrowser extends HttpServlet {

        	protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
        		PrintWriter writer = resp.getWriter();
        		try {
        			Map&amp;lt;String, List&amp;lt;MBeanData&amp;gt;&amp;gt; domainData = getDomainData(&amp;quot;jboss.messaging.destination:*&amp;quot;);

        			for (String key : domainData.keySet()) {
        				writer.print(&amp;quot;&amp;lt;b&amp;gt;Domain Name - &amp;quot; + key + &amp;quot;&amp;lt;/b&amp;gt;&amp;lt;/br&amp;gt;&amp;quot;);
        				List&amp;lt;MBeanData&amp;gt; data = domainData.get(key);
        				for (MBeanData beanData : data) {
        					writer.print(beanData.getNameProperties() + &amp;quot;&amp;lt;/br&amp;gt;&amp;quot;);
        				}
        			}
        		} catch (Exception e) {
        			e.printStackTrace();
        		}
        	}

        	private Map&amp;lt;String, List&amp;lt;MBeanData&amp;gt;&amp;gt; getDomainData(String filter) throws JMException {
        		MBeanServer server = getMBeanServer();
        		Map&amp;lt;String, List&amp;lt;MBeanData&amp;gt;&amp;gt; domainDataMap = new TreeMap&amp;lt;String, List&amp;lt;MBeanData&amp;gt;&amp;gt;();

        		if (server != null) {
        			ObjectName filterName = null;
        			if (filter != null)
        				filterName = new ObjectName(filter);

        			Set&amp;lt;ObjectName&amp;gt; objectNames = server.queryNames(filterName, null);

        			for (ObjectName objectName : objectNames) {
        				List&amp;lt;MBeanData&amp;gt; data = null;
        				
        				MBeanData mbeanData = new MBeanData(objectName, server.getMBeanInfo(objectName));
        				String domainName = objectName.getDomain();
        				System.out.println(domainName + &amp;quot;-&amp;gt;&amp;quot; + objectName.toString());
        				
        				if (domainDataMap.containsKey(domainName)){
        					data = (List&amp;lt;MBeanData&amp;gt;) domainDataMap.get(domainName);
        					data.add(mbeanData);
        				}
        				else {
        					data = new ArrayList&amp;lt;MBeanData&amp;gt;();
        					data.add(mbeanData);
        					domainDataMap.put(domainName, data);
        				}
        			}
        		}
        		return domainDataMap;
        	}

        	private MBeanServer getMBeanServer() {
        		return MBeanServerLocator.locateJBoss();
        	}

        }

        The main piece of code here lies in the method &amp;lt;span style=&amp;quot;color:#0000ff;&amp;quot;&amp;gt;getMBeanServer()&amp;lt;/span&amp;gt;, here we locate a reference to the main JBoss MBean. Thereafter, using the MBean API we retrieve the ObjectNames that match our filter -&amp;lt;span style=&amp;quot;color:#ff0000;&amp;quot;&amp;gt; &amp;quot;jboss.messaging.destination:*&amp;quot;&amp;lt;/span&amp;gt;, this helps us retrieve references only to messaging destinations MBeans (you can use some other filter to retrieve other types of MBeans, or leave filter as null to get all the MBeans).

        Then we iterate over the returned Set of ObjectNames and create a bean of type MBeanData - containing the ObjectName and the MBeanInfo (which describes the set of attributes and operations which are available for management operations, thus is quite important).

        Since all the Queues will have the same domain name, in the value part of the map we have a List of MBeanData. We then iteratively add beans to this list and later print them out.

        We create 1 helper classes -

        &amp;lt;strong&amp;gt;MBeanData.java&amp;lt;/strong&amp;gt;

        package net.rocky.qsoft.model;

        import javax.management.MBeanInfo;
        import javax.management.ObjectName;

        /**
         * An mbean ObjectName and MBeanInfo pair that is orderable by ObjectName.
         *
         * @author Scott.Stark@jboss.org
         * @version $Revision: 81038 $
         */
        public class MBeanData implements Comparable {

        	private ObjectName objectName;
        	private MBeanInfo metaData;

        	public MBeanData() {
        	}

        	public MBeanData(ObjectName objectName, MBeanInfo metaData) {
        		this.objectName = objectName;
        		this.metaData = metaData;
        	}

        	/**
        	 * Getter for property objectName.
        	 *
        	 * @return Value of property objectName.
        	 */
        	public ObjectName getObjectName() {
        		return objectName;
        	}

        	/**
        	 * Setter for property objectName.
        	 *
        	 * @param objectName
        	 *            New value of property objectName.
        	 */
        	public void setObjectName(ObjectName objectName) {
        		this.objectName = objectName;
        	}

        	/**
        	 * Getter for property metaData.
        	 *
        	 * @return Value of property metaData.
        	 */
        	public MBeanInfo getMetaData() {
        		return metaData;
        	}

        	/**
        	 * Setter for property metaData.
        	 *
        	 * @param metaData
        	 *            New value of property metaData.
        	 */
        	public void setMetaData(MBeanInfo metaData) {
        		this.metaData = metaData;
        	}

        	/**
        	 * @return The ObjectName.toString()
        	 */
        	public String getName() {
        		return objectName.toString();
        	}

        	/**
        	 * @return The canonical key properties string
        	 */
        	public String getNameProperties() {
        		return objectName.getCanonicalKeyPropertyListString();
        	}

        	/**
        	 * @return The MBeanInfo.getClassName() value
        	 */
        	public String getClassName() {
        		return metaData.getClassName();
        	}

        	/**
        	 * Compares MBeanData based on the ObjectName domain name and canonical key
        	 * properties
        	 *
        	 * @param the
        	 *            MBeanData to compare against
        	 * @return &amp;lt; 0 if this is less than o, &amp;gt; 0 if this is greater than o, 0 if
        	 *         equal.
        	 */
        	public int compareTo(Object o) {
        		MBeanData md = (MBeanData) o;
        		String d1 = objectName.getDomain();
        		String d2 = md.objectName.getDomain();
        		int compare = d1.compareTo(d2);
        		if (compare == 0) {
        			String p1 = objectName.getCanonicalKeyPropertyListString();
        			String p2 = md.objectName.getCanonicalKeyPropertyListString();
        			compare = p1.compareTo(p2);
        		}
        		return compare;
        	}

        	public boolean equals(Object o) {
        		if (o == null || (o instanceof MBeanData) == false)
        			return false;
        		if (this == o)
        			return true;
        		return (this.compareTo(o) == 0);
        	}
        }

        Here&amp;#39;s my &amp;lt;strong&amp;gt;pom.xml&amp;lt;/strong&amp;gt;

        &amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
        &amp;lt;project xmlns=&amp;quot;http://maven.apache.org/POM/4.0.0&amp;quot; xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot;
          xsi:schemaLocation=&amp;quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd&amp;quot;&amp;gt;
          &amp;lt;modelVersion&amp;gt;4.0.0&amp;lt;/modelVersion&amp;gt;
          &amp;lt;groupId&amp;gt;net.rocky&amp;lt;/groupId&amp;gt;
          &amp;lt;artifactId&amp;gt;qsoft&amp;lt;/artifactId&amp;gt;
          &amp;lt;packaging&amp;gt;war&amp;lt;/packaging&amp;gt;
          &amp;lt;version&amp;gt;1&amp;lt;/version&amp;gt;
          &amp;lt;name&amp;gt;qsoft Maven Webapp&amp;lt;/name&amp;gt;
          &amp;lt;url&amp;gt;http://maven.apache.org&amp;lt;/url&amp;gt;
          &amp;lt;dependencies&amp;gt;
            &amp;lt;dependency&amp;gt;
              &amp;lt;groupId&amp;gt;junit&amp;lt;/groupId&amp;gt;
              &amp;lt;artifactId&amp;gt;junit&amp;lt;/artifactId&amp;gt;
              &amp;lt;version&amp;gt;4.7&amp;lt;/version&amp;gt;
              &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;
            &amp;lt;/dependency&amp;gt;
            &amp;lt;dependency&amp;gt;
            	&amp;lt;groupId&amp;gt;javax.servlet&amp;lt;/groupId&amp;gt;
            	&amp;lt;artifactId&amp;gt;servlet-api&amp;lt;/artifactId&amp;gt;
            	&amp;lt;version&amp;gt;2.5&amp;lt;/version&amp;gt;
            	&amp;lt;scope&amp;gt;provided&amp;lt;/scope&amp;gt;
            &amp;lt;/dependency&amp;gt;
            &amp;lt;dependency&amp;gt;
              &amp;lt;groupId&amp;gt;org.jboss&amp;lt;/groupId&amp;gt;
              &amp;lt;artifactId&amp;gt;jbossall-client&amp;lt;/artifactId&amp;gt;
              &amp;lt;version&amp;gt;5.1.0&amp;lt;/version&amp;gt;
              &amp;lt;scope&amp;gt;system&amp;lt;/scope&amp;gt;
              &amp;lt;systemPath&amp;gt;/home/rjaiswal/01rocky/02apps/jboss-5.1.0.GA/client/jbossall-client.jar&amp;lt;/systemPath&amp;gt;&amp;lt;!-- Needs to be changed as per user env --&amp;gt;
            &amp;lt;/dependency&amp;gt;
          &amp;lt;/dependencies&amp;gt;
          &amp;lt;build&amp;gt;
            &amp;lt;finalName&amp;gt;qsoft&amp;lt;/finalName&amp;gt;
            &amp;lt;plugins&amp;gt;
                 &amp;lt;plugin&amp;gt;
                    &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;
                    &amp;lt;artifactId&amp;gt;maven-compiler-plugin&amp;lt;/artifactId&amp;gt;
                    &amp;lt;configuration&amp;gt;
                       &amp;lt;source&amp;gt;1.5&amp;lt;/source&amp;gt;
                       &amp;lt;target&amp;gt;1.5&amp;lt;/target&amp;gt;
                    &amp;lt;/configuration&amp;gt;
                 &amp;lt;/plugin&amp;gt;
              &amp;lt;/plugins&amp;gt;
          &amp;lt;/build&amp;gt;
        &amp;lt;/project&amp;gt;

        Create the necessary config in web.xml for the Servlet. Do a mvn clean install and deploy the war in JBoss and you are good to go.

        Final screen -
        &amp;lt;img src=&amp;quot;http://rockysjavacafe.wordpress.com/files/2009/11/qbrowser2.png&amp;quot; alt=&amp;quot;Browse Queues&amp;quot; height=&amp;quot;100%&amp;quot; width=&amp;quot;100%&amp;quot;/&amp;gt;

        As can be seen, the MBean DomainName is same for all queues, the name-value though differs and is printed. This code can be further used to retrieve attributes for the individual queue or to execute operations on it. Hope this code helps you get started.

        &amp;lt;strong&amp;gt;Credits&amp;lt;/strong&amp;gt; - JBoss team for providing the source to JMX Console, which helped us get started and &amp;lt;a href=&amp;quot;http://www-scf.usc.edu/~meghaj/&amp;quot;&amp;gt;Megha Jain &amp;lt;/a&amp;gt; my colleague for working with me on this exercise.&lt;/code&gt;&lt;/pre&gt;</content>
  </entry>
  <entry>
    <title>Big bad projects</title>
    <link rel="http://rockyj.in" href="/2011/03/11/big-bad-projects.html"/>
    <id>http://rockyj.in/2011/03/11/big-bad-projects.html</id>
    <published>2011-03-11T00:00:00+05:30</published>
    <updated>2011-03-11T00:00:00+05:30</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;p&gt;A long time back (when I had more hair on my head), one of my managers remarked - &amp;#8220;You know guys, I just met an old friend of mine who now works for ABC Corp as a Project Manager and he said that he delivered a 18 months fixed price project right on time and right on schedule. We need to have the same capabilities as ABC Corp.&amp;#8221;&lt;/p&gt;

&lt;p&gt;I sat dumbfounded, I wanted to scream out &amp;#8220;He was just lucky or he was lying or you should talk to the team members who worked in that team&amp;#8221;, but I didn&amp;#8217;t say anything because pesky &amp;#8220;juniors&amp;#8221; aren&amp;#8217;t looked upon very nicely in hierarchical organizations.&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;A long time back (when I had more hair on my head), one of my managers remarked - &amp;#8220;You know guys, I just met an old friend of mine who now works for ABC Corp as a Project Manager and he said that he delivered a 18 months fixed price project right on time and right on schedule. We need to have the same capabilities as ABC Corp.&amp;#8221;&lt;/p&gt;

&lt;p&gt;I sat dumbfounded, I wanted to scream out &amp;#8220;He was just lucky or he was lying or you should talk to the team members who worked in that team&amp;#8221;, but I didn&amp;#8217;t say anything because pesky &amp;#8220;juniors&amp;#8221; aren&amp;#8217;t looked upon very nicely in hierarchical organizations.&lt;/p&gt;

&lt;p&gt;I now imagine myself having a conversation with the same manager in that same room, which goes something like this.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Me&lt;/strong&gt; - &amp;#8220;Lets play a game. Please indulge me. Can you tell me in exact seconds, the time you will take to reach the nearest door in this room.&amp;#8221;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Manager&lt;/strong&gt; - &amp;#8220;Yes, around 10 seconds.&amp;#8221;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Me&lt;/strong&gt; - &amp;#8220;Good. How can you say that?&amp;#8221;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Manager&lt;/strong&gt; - &amp;#8220;Coz its 15 feet and I think I can cover 15 feet in 10 seconds.&amp;#8221;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Me&lt;/strong&gt; - &amp;#8220;Fair enough. Now can you tell me the time it will take for you to reach London from Delhi in exact number of seconds. Forget seconds, tell me in minutes.&amp;#8221;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Manager&lt;/strong&gt; - (after a pause) &amp;#8220;Well, depending on flight time and the distance to airport approx 600 minutes.&amp;#8221;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Me&lt;/strong&gt; - &amp;#8220;I have to tell you that even if there is one minute of delay, there is a huge penalty and what if your taxi is late or the flight is delayed ?&amp;#8221;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Manager&lt;/strong&gt; - &amp;#8220;One cannot say for sure. In fact, no one can tell you with exact certainty because too many un-predictable things can happen.&amp;#8221;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Me&lt;/strong&gt; - &amp;#8220;How many times have you been to London?&amp;#8221;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Manager&lt;/strong&gt; - &amp;#8220;More than 8 times .&amp;#8221;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Me&lt;/strong&gt; - &amp;#8220;So you cannot say for certainty the exact time you will take for something which you have done for more than 8 times. But you could tell me the exact time you will take to reach for a nearby door. Why is that?&amp;#8221;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Manager&lt;/strong&gt; - &amp;#8220;Coz I can see the door. Geez, are you thick or something.&amp;#8221;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Me&lt;/strong&gt; - &amp;#8220;Yes, I have always been a bit thick. But let us apply this analogy to software. You want me to tell you for sure the exact time it will take for me to develop a software which is unique in its own way and which no-one has developed before. But you yourself cannot tell me the exact time you will take to reach London although you have done it more than 8 times.&amp;#8221;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Manager&lt;/strong&gt; - &amp;#8220;Hmmm &amp;#8230; what are you getting at?&amp;#8221;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Me&lt;/strong&gt; - &amp;#8220;What I am saying is, as you increase the distance or time horizon, uncertainty increases.&amp;#8221;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Manager&lt;/strong&gt; - &amp;#8220;That is quite true.&amp;#8221;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Me&lt;/strong&gt; - &amp;#8220;Yes, so what I can only say with a fair degree of certainty is where we will be in this project after 1-2 weeks.&amp;#8221;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Manager&lt;/strong&gt; - &amp;#8220;You maybe right, but that is not how it works. The customer asks how long will it take to build the whole thing.&amp;#8221;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Me&lt;/strong&gt; - &amp;#8220;Why do think they do that?&amp;#8221;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Manager&lt;/strong&gt; - &amp;#8220;I guess they feel safe this way, they can allocate a budget to it.&amp;#8221;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Me&lt;/strong&gt; - &amp;#8220;Again, I am a bit thick. So a customer looks at a project, lets say a Reporting System and thinks this work should take 6 months to build for 4 people ergo the time is 6 months and budget is $10,000 or something like that. Do they have the expertise to make this call?&amp;#8221;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Manager&lt;/strong&gt; - &amp;#8220;Hmmm .. maybe they have the expertise or maybe they don&amp;#8217;t and sometimes they even ask us to do this.&amp;#8221;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Me&lt;/strong&gt; - &amp;#8220;I am not getting it, why do they do this every single time if it is so error prone and they do not trust even themselves.&amp;#8221;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Manager&lt;/strong&gt; - &amp;#8220;Coz maybe they feel safe.&amp;#8221;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Me&lt;/strong&gt; - &amp;#8220;Ok. So they allocate a budget and outsource to project to someone, asking them to complete it in 6 months or give a penalty. They can sleep easy this way.&amp;#8221;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Manager&lt;/strong&gt; - &amp;#8220;Yes. I think that&amp;#8217;s it!&amp;#8221;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Me&lt;/strong&gt; - &amp;#8220;But if I say, I will give it my best and give you a commitment for only the next two weeks of work and see how it goes from there. What would a customer say.&amp;#8221;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Manager&lt;/strong&gt; - &amp;#8220;I don&amp;#8217;t think he would agree.&amp;#8221;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Me&lt;/strong&gt; - &amp;#8220;Why?&amp;#8221;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Manager&lt;/strong&gt; - &amp;#8220;Coz he doesn&amp;#8217;t know when his project will end ?&amp;#8221;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Me&lt;/strong&gt; - &amp;#8220;But I am working hard and in the best way I can. Which is in no way different than the 6 months commitment I make.&amp;#8221;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Manager&lt;/strong&gt; - &amp;#8220;But he wants a deadline, what if you are slacking?&amp;#8221;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Me&lt;/strong&gt; - &amp;#8220;Bingo!! Its because the work is done somewhere in a different location and you cannot trust someone is why you want deadlines.&amp;#8221;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Manager&lt;/strong&gt; - &amp;#8220;Yes, I guess that is what outsourcing is about.&amp;#8221;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Me&lt;/strong&gt; - &amp;#8220;But if you trust me as your partner who is fully committed to the project, does the two week commitment sound good.&amp;#8221;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Manager&lt;/strong&gt; - &amp;#8220;Yes. I think so. But I still don&amp;#8217;t buy it. We have delivered many projects on time after giving a long term commitment.&amp;#8221;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Me&lt;/strong&gt; - &amp;#8220;We all know how that happens. People spend nights in office and quality goes for a toss. Giving the same international travel analogy you put a gun to the pilots head and ask him to fly fast coz you made a commitment to reach London in 10 hours. Except you cannot do that on a plane but you can do it with us developers. Geez&amp;#8230; and then people complain about the high rate of software project failures and late bug discovery.&amp;#8221;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Manager&lt;/strong&gt; - &amp;#8220;Hmmm&amp;#8230;&amp;#8221;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Me&lt;/strong&gt; - &amp;#8220;If I say there is a clause that no-one will work beyond 9 hours, how many of your so called successful commitments be successful ?&amp;#8221;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Manager&lt;/strong&gt; - &amp;#8220;Not a lot.&amp;#8221;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Me&lt;/strong&gt; - &amp;#8220;Just because you can do it, doesn&amp;#8217;t mean you should.&amp;#8221;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Manager&lt;/strong&gt; - &amp;#8220;I kinda agree, I remember my days when I had to spend 3 nights in the office to deliver a project and I can tell you the code we wrote was shit.&amp;#8221;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Me&lt;/strong&gt; - &amp;#8220;And yet it continues. Why is that?&amp;#8221;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Manager&lt;/strong&gt; - &amp;#8220;You are irritating me. I say its again its because the customer wants a deadline. He cannot give us a free hand to deliver the project when we say its ready. They don&amp;#8217;t trust us that much.&amp;#8221;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Me&lt;/strong&gt; - &amp;#8220;Yes. And that my friend is the problem. Trust. If you can monitor each and every second of my day I guess you would be very comfortable with the 2 week work schedule, lets call it a Sprint.&amp;#8221;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Manager&lt;/strong&gt; - &amp;#8220;Yes. Good idea.&amp;#8221;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Me&lt;/strong&gt; - &amp;#8220;If I give you a daily status report, put cameras in my working area and give you a working software demo every two weeks this trust can be built.&amp;#8221;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Manager&lt;/strong&gt; - &amp;#8220;Sounds good. Maybe we can try it.&amp;#8221;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Me&lt;/strong&gt; - &amp;#8220;Yes, lets build that trust by delivering high quality software regularly without making the team slog and lets make our customers really happy.&amp;#8221;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Manager&lt;/strong&gt; - &amp;#8220;And what&amp;#8217;s there in it for the customer apart from your so called high quality?&amp;#8221;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Me&lt;/strong&gt; - &amp;#8220;We hear a lot of time, why isn&amp;#8217;t my software as reliable as my car or as reliable as the house I live in. I think the answer lies here. If I ask a car maker to make a car for me no matter what in 6 months or I ask a builder to build my house, flood or rain in 3 months before a brick is laid, I wouldn&amp;#8217;t be so comfortable in that car or house later. Software programming is even harder, there are new technologies, the user keeps changing his mind and numerous other un-certainties. Maybe if we follow this model, more software projects would be successful. Lets give it a shot.&amp;#8221;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Working with Git</title>
    <link rel="http://rockyj.in" href="/2011/03/11/working-with-git.html"/>
    <id>http://rockyj.in/2011/03/11/working-with-git.html</id>
    <published>2011-03-11T00:00:00+05:30</published>
    <updated>2011-03-11T00:00:00+05:30</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;p&gt;A video blog / screencast to help you get started with Git.&lt;/p&gt;
&lt;object data='http://xebee.xebia.in/wp-content/uploads/2010/10/git-1-perfect-1_controller.swf' height='379' type='application/x-shockwave-flash' width='640' /&gt;</summary>
    <content type="html">&lt;p&gt;A video blog / screencast to help you get started with Git.&lt;/p&gt;
&lt;object data='http://xebee.xebia.in/wp-content/uploads/2010/10/git-1-perfect-1_controller.swf' height='379' type='application/x-shockwave-flash' width='640' /&gt;</content>
  </entry>
</feed>
